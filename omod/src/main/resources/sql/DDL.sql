DROP PROCEDURE IF EXISTS create_etl_tables $$
CREATE PROCEDURE create_etl_tables()
BEGIN
DECLARE script_id INT(11);

-- create/recreate database kenyaemr_etl
drop database if exists kenyaemr_etl;
create database kenyaemr_etl DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci;

drop database if exists kenyaemr_datatools;
create database kenyaemr_datatools DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci;

DROP TABLE IF EXISTS kenyaemr_etl.etl_script_status;
CREATE TABLE kenyaemr_etl.etl_script_status(
  id INT(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
  script_name VARCHAR(50) DEFAULT null,
  start_time DATETIME DEFAULT NULL,
  stop_time DATETIME DEFAULT NULL,
  error VARCHAR(255) DEFAULT NULL
);

-- Log start time
INSERT INTO kenyaemr_etl.etl_script_status(script_name, start_time) VALUES('initial_creation_of_tables', NOW());
SET script_id = LAST_INSERT_ID();

DROP TABLE if exists kenyaemr_etl.etl_hiv_enrollment;
DROP TABLE IF EXISTS kenyaemr_etl.etl_patient_hiv_followup;
DROP TABLE IF EXISTS kenyaemr_etl.etl_laboratory_extract;
DROP TABLE IF EXISTS kenyaemr_etl.etl_pharmacy_extract;
DROP TABLE IF EXISTS kenyaemr_etl.etl_patient_treatment_event;
DROP TABLE IF EXISTS kenyaemr_etl.etl_patient_program_discontinuation;
DROP TABLE IF EXISTS kenyaemr_etl.etl_mch_enrollment;
DROP TABLE IF EXISTS kenyaemr_etl.etl_mch_antenatal_visit;
DROP TABLE IF EXISTS kenyaemr_etl.etl_mch_postnatal_visit;
DROP TABLE IF EXISTS kenyaemr_etl.etl_tb_enrollment;
DROP TABLE IF EXISTS kenyaemr_etl.etl_tb_follow_up_visit;
DROP TABLE IF EXISTS kenyaemr_etl.etl_tb_screening;
DROP TABLE IF EXISTS kenyaemr_etl.etl_hei_enrollment;
DROP TABLE IF EXISTS kenyaemr_etl.etl_hei_follow_up_visit;
DROP TABLE IF EXISTS kenyaemr_etl.etl_mchs_delivery;
DROP TABLE IF EXISTS kenyaemr_etl.etl_mchs_discharge;
DROP TABLE IF EXISTS kenyaemr_etl.etl_hei_immunization;
DROP TABLE IF EXISTS kenyaemr_etl.etl_patients_booked_today;
DROP TABLE IF EXISTS kenyaemr_etl.etl_missed_appointments;
DROP TABLE if exists kenyaemr_etl.etl_patient_demographics;
DROP TABLE if exists kenyaemr_etl.etl_person_address;
DROP TABLE IF EXISTS kenyaemr_etl.etl_drug_event;
DROP TABLE IF EXISTS kenyaemr_etl.etl_hts_test;
DROP TABLE IF EXISTS kenyaemr_etl.etl_hts_referral_and_linkage;
DROP TABLE IF EXISTS kenyaemr_etl.tmp_regimen_events_ordered;
DROP TABLE IF EXISTS kenyaemr_etl.etl_ccc_defaulter_tracing;
DROP TABLE IF EXISTS kenyaemr_etl.etl_ART_preparation;
DROP TABLE IF EXISTS kenyaemr_etl.etl_enhanced_adherence;
DROP TABLE IF EXISTS kenyaemr_etl.etl_patient_triage;
DROP TABLE IF EXISTS kenyaemr_etl.etl_hts_linkage_tracing;
DROP TABLE IF EXISTS kenyaemr_etl.etl_generalized_anxiety_disorder;
DROP TABLE IF EXISTS kenyaemr_etl.etl_ipt_initiation;
DROP TABLE IF EXISTS kenyaemr_etl.etl_ipt_follow_up;
DROP TABLE IF EXISTS kenyaemr_etl.etl_ipt_outcome;
DROP TABLE IF EXISTS kenyaemr_etl.etl_patient_program;
DROP TABLE IF EXISTS kenyaemr_etl.etl_default_facility_info;
DROP TABLE IF EXISTS kenyaemr_etl.etl_hts_referral;

DROP TABLE IF EXISTS kenyaemr_etl.etl_prep_behaviour_risk_assessment;
DROP TABLE IF EXISTS kenyaemr_etl.etl_prep_monthly_refill;
DROP TABLE IF EXISTS kenyaemr_etl.etl_prep_discontinuation;
DROP TABLE IF EXISTS kenyaemr_etl.etl_prep_enrollment;
DROP TABLE IF EXISTS kenyaemr_etl.etl_prep_followup;
DROP TABLE IF EXISTS kenyaemr_etl.etl_progress_note;
DROP TABLE IF EXISTS kenyaemr_etl.etl_ovc_enrolment;
DROP TABLE IF EXISTS kenyaemr_etl.etl_cervical_cancer_screening;

DROP TABLE IF EXISTS kenyaemr_etl.etl_client_trace;
DROP TABLE IF EXISTS kenyaemr_etl.etl_contact;
DROP TABLE IF EXISTS kenyaemr_etl.etl_client_enrollment;
DROP TABLE IF EXISTS kenyaemr_etl.etl_clinical_visit;
DROP TABLE IF EXISTS kenyaemr_etl.etl_peer_calendar;
DROP TABLE IF EXISTS kenyaemr_etl.etl_sti_treatment;
DROP TABLE IF EXISTS kenyaemr_etl.etl_peer_tracking;
-- DROP TABLE IF EXISTS kenyaemr_etl.etl_gender_based_violence;
DROP TABLE IF EXISTS kenyaemr_etl.etl_treatment_verification;
DROP TABLE IF EXISTS kenyaemr_etl.etl_PrEP_verification;
DROP TABLE IF EXISTS kenyaemr_etl.etl_alcohol_drug_abuse_screening;
DROP TABLE IF EXISTS kenyaemr_etl.etl_gbv_screening;
DROP TABLE IF EXISTS kenyaemr_etl.etl_gbv_screening_action;
DROP TABLE IF EXISTS kenyaemr_etl.etl_depression_screening;
DROP TABLE IF EXISTS kenyaemr_etl.etl_adverse_events;
DROP TABLE IF EXISTS kenyaemr_etl.etl_allergy_chronic_illness;
DROP TABLE IF EXISTS kenyaemr_etl.etl_ipt_screening;
DROP TABLE IF EXISTS kenyaemr_etl.etl_pre_hiv_enrollment_art;
DROP TABLE IF EXISTS kenyaemr_etl.etl_covid19_assessment;
DROP TABLE IF EXISTS kenyaemr_etl.etl_vmmc_enrolment;
DROP TABLE IF EXISTS kenyaemr_etl.etl_vmmc_circumcision_procedure;
DROP TABLE IF EXISTS kenyaemr_etl.etl_vmmc_medical_history;
DROP TABLE IF EXISTS kenyaemr_etl.etl_vmmc_client_followup;
DROP TABLE IF EXISTS kenyaemr_etl.etl_vmmc_post_operation_assessment;
DROP TABLE IF EXISTS kenyaemr_etl.etl_hts_eligibility_screening;
DROP TABLE IF EXISTS kenyaemr_etl.etl_drug_order;
DROP TABLE IF EXISTS kenyaemr_etl.etl_preventive_services;
DROP TABLE IF EXISTS kenyaemr_etl.etl_overdose_reporting;
DROP TABLE IF EXISTS kenyaemr_etl.etl_art_fast_track;

-- create table etl_patient_demographics
create table kenyaemr_etl.etl_patient_demographics (
patient_id INT(11) not null primary key,
uuid char(38),
given_name VARCHAR(255),
middle_name VARCHAR(255),
family_name VARCHAR(255),
Gender VARCHAR(10),
DOB DATE,
national_id_no VARCHAR(50),
huduma_no VARCHAR(50),
passport_no VARCHAR(50),
birth_certificate_no VARCHAR(50),
unique_patient_no VARCHAR(50),
alien_no VARCHAR(50),
driving_license_no VARCHAR(50),
national_unique_patient_identifier VARCHAR(50),
hts_recency_id VARCHAR(50),
nhif_number VARCHAR(50) DEFAULT NULL,
patient_clinic_number VARCHAR(15) DEFAULT NULL,
Tb_no VARCHAR(50),
CPIMS_unique_identifier VARCHAR(50),
openmrs_id VARCHAR(50),
unique_prep_number VARCHAR(50),
district_reg_no VARCHAR(50),
hei_no VARCHAR(50),
cwc_number VARCHAR(50),
phone_number VARCHAR(50) DEFAULT NULL,
birth_place VARCHAR(50) DEFAULT NULL,
citizenship VARCHAR(50) DEFAULT NULL,
email_address VARCHAR(100) DEFAULT NULL,
occupation VARCHAR(100) DEFAULT NULL,
next_of_kin VARCHAR(255) DEFAULT NULL,
next_of_kin_phone VARCHAR(100) DEFAULT NULL,
next_of_kin_relationship VARCHAR(100) DEFAULT NULL,
marital_status VARCHAR(50) DEFAULT NULL,
education_level VARCHAR(50) DEFAULT NULL,
kdod_service_number VARCHAR(50) DEFAULT NULL,
cadre VARCHAR(100) DEFAULT NULL,
rank VARCHAR(100) DEFAULT NULL,
unit VARCHAR(100) DEFAULT NULL,
dead INT(11),
death_date DATE DEFAULT NULL,
voided INT(11),
date_created DATETIME NOT NULL,
date_last_modified DATETIME,
index(patient_id),
index(Gender),
index(unique_patient_no),
index(DOB)

);

SELECT "Successfully created etl_patient_demographics table";
-- create table etl_hiv_enrollment


create table kenyaemr_etl.etl_hiv_enrollment(
uuid char(38) ,
patient_id INT(11) NOT NULL,
visit_id INT(11) DEFAULT NULL,
visit_date DATE,
location_id INT(11) DEFAULT NULL,
encounter_id INT(11) NOT NULL PRIMARY KEY,
encounter_provider INT(11),
patient_type INT(11),
date_first_enrolled_in_care DATE,
entry_point INT(11),
transfer_in_date DATE,
facility_transferred_from VARCHAR(255),
district_transferred_from VARCHAR(255),
date_started_art_at_transferring_facility DATE,
date_confirmed_hiv_positive DATE,
facility_confirmed_hiv_positive VARCHAR(255),
previous_regimen VARCHAR(255),
arv_status INT(11),
ever_on_pmtct INT(11),
ever_on_pep INT(11),
ever_on_prep INT(11),
ever_on_haart INT(11),
who_stage INT(11),
name_of_treatment_supporter VARCHAR(255),
relationship_of_treatment_supporter INT(11),
treatment_supporter_telephone VARCHAR(100),
treatment_supporter_address VARCHAR(100),
in_school INT(11) DEFAULT NULL,
orphan INT(11) DEFAULT NULL,
date_of_discontinuation DATETIME,
discontinuation_reason INT(11),
date_created DATETIME NOT NULL,
date_last_modified DATETIME,
voided INT(11),
constraint foreign key(patient_id) references kenyaemr_etl.etl_patient_demographics(patient_id),
CONSTRAINT unique_uuid UNIQUE(uuid),
index(patient_id),
index(visit_id),
index(visit_date),
index(date_started_art_at_transferring_facility),
index(arv_status),
index(date_confirmed_hiv_positive),
index(entry_point),
index(transfer_in_date),
index(date_first_enrolled_in_care),
index(entry_point, transfer_in_date, visit_date, patient_id)

);

SELECT "Successfully created etl_hiv_enrollment table";
-- create table etl_hiv_followup

CREATE TABLE kenyaemr_etl.etl_patient_hiv_followup (
uuid CHAR(38),
encounter_id INT(11) NOT NULL PRIMARY KEY,
patient_id INT(11) NOT NULL ,
location_id INT(11) DEFAULT NULL,
visit_date DATE,
visit_id INT(11),
encounter_provider INT(11),
date_created DATETIME NOT NULL,
date_last_modified DATETIME,
visit_scheduled INT(11),
person_present INT(11),
weight DOUBLE,
systolic_pressure DOUBLE,
diastolic_pressure DOUBLE,
height DOUBLE,
temperature DOUBLE,
pulse_rate DOUBLE,
respiratory_rate DOUBLE,
oxygen_saturation DOUBLE,
muac DOUBLE,
z_score_absolute DOUBLE DEFAULT NULL,
z_score INT(11),
nutritional_status INT(11) DEFAULT NULL,
population_type INT(11) DEFAULT NULL,
key_population_type INT(11) DEFAULT NULL,
who_stage INT(11),
who_stage_associated_oi VARCHAR(1000),
presenting_complaints INT(11) DEFAULT NULL,
patient_admitted INT(11) DEFAULT NULL,
patient_date_admitted DATE,
clinical_notes VARCHAR(600) DEFAULT NULL,
on_anti_tb_drugs INT(11) DEFAULT NULL,
on_ipt INT(11) DEFAULT NULL,
ever_on_ipt INT(11) DEFAULT NULL,
cough INT(11) DEFAULT -1,
fever INT(11) DEFAULT -1,
weight_loss_poor_gain INT(11) DEFAULT -1,
night_sweats INT(11) DEFAULT -1,
tb_case_contact INT(11) DEFAULT -1,
lethargy INT(11) DEFAULT -1,
screened_for_tb VARCHAR(50),
spatum_smear_ordered INT(11) DEFAULT NULL,
chest_xray_ordered INT(11) DEFAULT NULL,
genexpert_ordered INT(11) DEFAULT NULL,
spatum_smear_result INT(11) DEFAULT NULL,
chest_xray_result INT(11) DEFAULT NULL,
genexpert_result INT(11) DEFAULT NULL,
referral INT(11) DEFAULT NULL,
clinical_tb_diagnosis INT(11) DEFAULT NULL,
contact_invitation INT(11) DEFAULT NULL,
evaluated_for_ipt INT(11) DEFAULT NULL,
has_known_allergies INT(11) DEFAULT NULL,
has_chronic_illnesses_cormobidities INT(11) DEFAULT NULL,
has_adverse_drug_reaction INT(11) DEFAULT NULL,
substitution_first_line_regimen_date DATE ,
substitution_first_line_regimen_reason INT(11),
substitution_second_line_regimen_date DATE,
substitution_second_line_regimen_reason INT(11),
second_line_regimen_change_date DATE,
second_line_regimen_change_reason INT(11),
pregnancy_status INT(11),
breastfeeding INT(11),
wants_pregnancy INT(11) DEFAULT NULL,
pregnancy_outcome INT(11),
anc_number VARCHAR(50),
expected_delivery_date DATE,
ever_had_menses INT(11),
last_menstrual_period DATE,
menopausal INT(11),
gravida INT(11),
parity INT(11),
full_term_pregnancies INT(11),
abortion_miscarriages INT(11),
family_planning_status INT(11),
family_planning_method INT(11),
reason_not_using_family_planning INT(11),
tb_status INT(11),
started_anti_TB INT(11),
tb_rx_date DATE,
tb_treatment_no VARCHAR(50),
general_examination VARCHAR(255),
system_examination INT(11),
skin_findings INT(11),
eyes_findings INT(11),
ent_findings INT(11),
chest_findings INT(11),
cvs_findings INT(11),
abdomen_findings INT(11),
cns_findings INT(11),
genitourinary_findings INT(11),
prophylaxis_given VARCHAR(50),
ctx_adherence INT(11),
ctx_dispensed INT(11),
dapsone_adherence INT(11),
dapsone_dispensed INT(11),
inh_dispensed INT(11),
arv_adherence INT(11),
poor_arv_adherence_reason INT(11),
poor_arv_adherence_reason_other VARCHAR(200),
pwp_disclosure INT(11),
pwp_pead_disclosure INT(11),
pwp_partner_tested INT(11),
condom_provided INT(11),
substance_abuse_screening INT(11),
screened_for_sti INT(11),
cacx_screening INT(11),
sti_partner_notification INT(11),
at_risk_population INT(11),
system_review_finding INT(11),
next_appointment_date DATE,
refill_date DATE,
appointment_consent INT(11),
next_appointment_reason INT(11),
stability INT(11),
differentiated_care INT(11),
insurance_type INT(11),
other_insurance_specify VARCHAR(200),
insurance_status INT(11),
voided INT(11),
CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
CONSTRAINT unique_uuid UNIQUE(uuid),
INDEX(visit_date),
INDEX(encounter_id),
INDEX(patient_id),
INDEX(patient_id, visit_date),
INDEX(who_stage),
INDEX(pregnancy_status),
INDEX(breastfeeding),
INDEX(pregnancy_outcome),
INDEX(family_planning_status),
INDEX(family_planning_method),
INDEX(tb_status),
INDEX(condom_provided),
INDEX(ctx_dispensed),
INDEX(inh_dispensed),
INDEX(at_risk_population),
INDEX(population_type),
INDEX(key_population_type),
INDEX(on_anti_tb_drugs),
INDEX(on_ipt),
INDEX(ever_on_ipt),
INDEX(differentiated_care),
INDEX(visit_date, patient_id),
INDEX(visit_date, condom_provided),
INDEX(visit_date, family_planning_method),
INDEX(nutritional_status),
INDEX(next_appointment_date),
INDEX(appointment_consent),
INDEX(visit_date, next_appointment_date)
);

SELECT "Successfully created etl_patient_hiv_followup table";

-- ------- create table etl_laboratory_extract-----------------------------------------
  SELECT "Creating etl_laboratory_extract table";
CREATE TABLE kenyaemr_etl.etl_laboratory_extract (
uuid char(38) PRIMARY KEY,
encounter_id INT(11),
patient_id INT(11) NOT NULL ,
location_id INT(11) DEFAULT NULL,
visit_date DATE,
visit_id INT(11),
order_id VARCHAR(200),
lab_test VARCHAR(180),
urgency VARCHAR(50),
order_reason VARCHAR(180),
test_result VARCHAR(180),
date_test_requested DATE DEFAULT null,
date_test_result_received DATE,
test_requested_by INT(11),
date_created DATETIME NOT NULL,
date_last_modified DATETIME,
created_by INT(11),
CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
CONSTRAINT unique_uuid UNIQUE(uuid),
INDEX(visit_date),
INDEX(encounter_id),
INDEX(patient_id),
INDEX(lab_test),
INDEX(test_result)

);
SELECT "Successfully created etl_laboratory_extract table";

-- ------------ create table etl_pharmacy_extract-----------------------


CREATE TABLE kenyaemr_etl.etl_pharmacy_extract(
obs_group_id INT(11) PRIMARY KEY,
uuid char(38),
patient_id INT(11) NOT NULL ,
location_id INT(11) DEFAULT NULL,
visit_date DATE,
visit_id INT(11),
encounter_id INT(11),
encounter_name VARCHAR(100),
drug INT(11),
is_arv INT(11),
is_ctx INT(11),
is_dapsone INT(11),
drug_name VARCHAR(255),
dose INT(11),
unit INT(11),
frequency INT(11),
duration INT(11),
duration_units VARCHAR(20) ,
duration_in_days INT(11),
prescription_provider VARCHAR(50),
dispensing_provider VARCHAR(50),
regimen MEDIUMTEXT,
adverse_effects VARCHAR(100),
date_of_refill DATE,
date_created DATETIME NOT NULL,
date_last_modified DATETIME,
voided INT(11),
date_voided DATE,
CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
CONSTRAINT unique_uuid UNIQUE(uuid),
INDEX(visit_date),
INDEX(encounter_id),
INDEX(patient_id),
INDEX(drug),
INDEX(is_arv)

);
SELECT "Successfully created etl_pharmacy_extract table";
-- ------------ create table etl_patient_treatment_discontinuation-----------------------

CREATE TABLE kenyaemr_etl.etl_patient_program_discontinuation(
uuid char(38),
patient_id INT(11) NOT NULL ,
visit_id INT(11),
visit_date DATETIME,
location_id INT(11) DEFAULT NULL,
program_uuid CHAR(38) ,
program_name VARCHAR(50),
encounter_id INT(11) NOT NULL PRIMARY KEY,
discontinuation_reason INT(11),
effective_discontinuation_date DATE,
trf_out_verified INT(11),
trf_out_verification_date DATE,
date_died DATE,
transfer_facility VARCHAR(100),
transfer_date DATE,
death_reason INT(11),
specific_death_cause INT(11),
natural_causes VARCHAR(200) DEFAULT NULL,
non_natural_cause VARCHAR(200) DEFAULT NULL,
date_created DATETIME NOT NULL,
date_last_modified DATETIME,
CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
CONSTRAINT unique_uuid UNIQUE(uuid),
INDEX(visit_date),
INDEX(visit_date, program_name, patient_id),
INDEX(visit_date, patient_id),
INDEX(encounter_id),
INDEX(patient_id),
INDEX(discontinuation_reason),
INDEX(date_died),
INDEX(transfer_date)
);
SELECT "Successfully created etl_patient_program_discontinuation table";

-- ------------ create table etl_mch_enrollment-----------------------
  CREATE TABLE kenyaemr_etl.etl_mch_enrollment (
    uuid char(38),
    patient_id INT(11) NOT NULL ,
    visit_id INT(11),
    visit_date DATE,
    location_id INT(11) DEFAULT NULL,
    encounter_id INT(11) NOT NULL PRIMARY KEY,
    service_type int(11),
    anc_number VARCHAR(50),
    first_anc_visit_date DATE,
    gravida INT(11),
    parity INT(11),
    parity_abortion INT(11),
    age_at_menarche INT(11),
    lmp DATE,
    lmp_estimated INT(11),
    edd_ultrasound DATE,
    blood_group INT(11),
    serology INT(11),
    tb_screening INT(11),
    bs_for_mps INT(11),
    hiv_status INT(11),
    hiv_test_date DATE,
    partner_hiv_status INT(11),
    partner_hiv_test_date DATE,
    ti_date_started_art DATE,
    ti_curent_regimen INT(11),
    ti_care_facility VARCHAR(100),
    urine_microscopy VARCHAR(100),
    urinary_albumin INT(11),
    glucose_measurement INT(11),
    urine_ph INT(11),
    urine_gravity INT(11),
    urine_nitrite_test INT(11),
    urine_leukocyte_esterace_test INT(11),
    urinary_ketone INT(11),
    urine_bile_salt_test INT(11),
    urine_bile_pigment_test INT(11),
    urine_colour INT(11),
    urine_turbidity INT(11),
    urine_dipstick_for_blood INT(11),
    date_of_discontinuation DATETIME,
    discontinuation_reason INT(11),
    date_created DATETIME NOT NULL,
    date_last_modified DATETIME,
    CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
    CONSTRAINT unique_uuid UNIQUE(uuid),
    INDEX(visit_date),
    INDEX(encounter_id),
    INDEX(tb_screening),
    INDEX(hiv_status),
    INDEX(hiv_test_date),
    INDEX(partner_hiv_status)
  );
  SELECT "Successfully created etl_mch_enrollment table";

  -- ------------ create table etl_mch_antenatal_visit-----------------------

  CREATE TABLE kenyaemr_etl.etl_mch_antenatal_visit (
    uuid char(38),
    patient_id INT(11) NOT NULL ,
    visit_id INT(11),
    visit_date DATE,
    location_id INT(11) DEFAULT NULL,
    encounter_id INT(11) NOT NULL PRIMARY KEY,
    provider INT(11),
    anc_visit_number INT(11),
    temperature DOUBLE,
    pulse_rate DOUBLE,
    systolic_bp DOUBLE,
    diastolic_bp DOUBLE,
    respiratory_rate DOUBLE,
    oxygen_saturation INT(11),
    weight DOUBLE,
    height DOUBLE,
    muac DOUBLE,
    hemoglobin DOUBLE,
    breast_exam_done INT(11),
    pallor INT(11),
    maturity INT(11),
    fundal_height DOUBLE,
    fetal_presentation INT(11),
    lie INT(11),
    fetal_heart_rate INT(11),
    fetal_movement INT(11),
    who_stage INT(11),
    cd4 INT(11),
    vl_sample_taken INT(11),
    viral_load INT(11),
    ldl INT(11),
    arv_status INT(11),
    test_1_kit_name VARCHAR(50),
    test_1_kit_lot_no VARCHAR(50) DEFAULT NULL,
    test_1_kit_expiry DATE DEFAULT NULL,
    test_1_result VARCHAR(50) DEFAULT NULL,
    test_2_kit_name VARCHAR(50),
    test_2_kit_lot_no VARCHAR(50) DEFAULT NULL,
    test_2_kit_expiry DATE DEFAULT NULL,
    test_2_result VARCHAR(50) DEFAULT NULL,
    final_test_result VARCHAR(50) DEFAULT NULL,
    patient_given_result VARCHAR(50) DEFAULT NULL,
    partner_hiv_tested INT(11),
    partner_hiv_status INT(11),
    prophylaxis_given INT(11),
    haart_given INT(11),
    date_given_haart DATE,
    baby_azt_dispensed INT(11),
    baby_nvp_dispensed INT(11),
    deworming_done_anc VARCHAR(100),
    IPT_dose_given_anc INT(11),
    TTT VARCHAR(50) DEFAULT NULL,
    IPT_malaria VARCHAR(50) DEFAULT NULL,
    iron_supplement VARCHAR(50) DEFAULT NULL,
    deworming VARCHAR(50) DEFAULT NULL,
    bed_nets VARCHAR(50) DEFAULT NULL,
    urine_microscopy VARCHAR(100),
    urinary_albumin INT(11),
    glucose_measurement INT(11),
    urine_ph INT(11),
    urine_gravity INT(11),
    urine_nitrite_test INT(11),
    urine_leukocyte_esterace_test INT(11),
    urinary_ketone INT(11),
    urine_bile_salt_test INT(11),
    urine_bile_pigment_test INT(11),
    urine_colour INT(11),
    urine_turbidity INT(11),
    urine_dipstick_for_blood INT(11),
    syphilis_test_status INT(11),
    syphilis_treated_status INT(11),
    bs_mps INT(11),
    diabetes_test INT(11),
    intermittent_presumptive_treatment_given INT(11),
    intermittent_presumptive_treatment_dose INT(11),
    minimum_package_of_care_given INT(11),
    minimum_package_of_care_services VARCHAR(1000),
    fgm_done INT(11),
    fgm_complications INT(11),
    fp_method_postpartum INT(11),
    anc_exercises INT(11),
    tb_screening INT(11),
    cacx_screening INT(11),
    cacx_screening_method INT(11),
    hepatitis_b_screening INT(11),
    hepatitis_b_treatment INT(11),
    has_other_illnes INT(11),
    counselled INT(11),
    counselled_on_birth_plans INT(11),
    counselled_on_danger_signs INT(11),
    counselled_on_family_planning INT(11),
    counselled_on_hiv INT(11),
    counselled_on_supplimental_feeding INT(11),
    counselled_on_breast_care INT(11),
    counselled_on_infant_feeding INT(11),
    counselled_on_treated_nets INT(11),
    minimum_care_package INT(11),
    risk_reduction INT(11),
    partner_testing INT(11),
    sti_screening INT(11),
    condom_provision INT(11),
    prep_adherence INT(11),
    anc_visits_emphasis INT(11),
    pnc_fp_counseling INT(11),
    referral_vmmc INT(11),
    referral_dreams INT(11),
    referred_from INT(11),
    referred_to INT(11),
    next_appointment_date DATE,
    clinical_notes VARCHAR(200) DEFAULT NULL,
    date_created DATETIME NOT NULL,
    date_last_modified DATETIME,
    CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
    CONSTRAINT unique_uuid UNIQUE(uuid),
    INDEX(visit_date),
    INDEX(encounter_id),
    INDEX(who_stage),
    INDEX(anc_visit_number),
    INDEX(final_test_result),
    INDEX(tb_screening),
    INDEX(syphilis_test_status),
    INDEX(cacx_screening),
    INDEX(next_appointment_date),
    INDEX(arv_status)
  );
  SELECT "Successfully created etl_mch_antenatal_visit table";

  -- ------------ create table etl_mchs_delivery-----------------------

  CREATE TABLE kenyaemr_etl.etl_mchs_delivery (
    uuid char(38),
    provider INT(11),
    patient_id INT(11) NOT NULL ,
    visit_id INT(11),
    visit_date DATE,
    location_id INT(11) DEFAULT NULL,
    encounter_id INT(11) NOT NULL PRIMARY KEY,
    date_created DATETIME NOT NULL,
    date_last_modified DATETIME,
    number_of_anc_visits INT(11),
    vaginal_examination INT(11),
    uterotonic_given INT(11),
    chlohexidine_applied_on_code_stump INT(11),
    vitamin_K_given INT(11),
    kangaroo_mother_care_given INT(11),
    testing_done_in_the_maternity_hiv_status INT(11),
    infant_provided_with_arv_prophylaxis INT(11),
    mother_on_haart_during_anc INT(11),
    mother_started_haart_at_maternity INT(11),
    vdrl_rpr_results INT(11),
    date_of_last_menstrual_period DATE,
    estimated_date_of_delivery DATE,
    reason_for_referral VARCHAR(100),
    admission_number VARCHAR(50),
    duration_of_pregnancy DOUBLE,
    mode_of_delivery INT(11),
    date_of_delivery DATETIME,
    blood_loss DOUBLE,
    condition_of_mother INT(11),
    delivery_outcome VARCHAR(255),
    apgar_score_1min  DOUBLE,
    apgar_score_5min  DOUBLE,
    apgar_score_10min DOUBLE,
    resuscitation_done INT(11),
    place_of_delivery INT(11),
    delivery_assistant VARCHAR(100),
    counseling_on_infant_feeding  INT(11),
    counseling_on_exclusive_breastfeeding INT(11),
    counseling_on_infant_feeding_for_hiv_infected INT(11),
    mother_decision INT(11),
    placenta_complete INT(11),
    maternal_death_audited INT(11),
    cadre INT(11),
    delivery_complications INT(11),
    coded_delivery_complications INT(11),
    other_delivery_complications VARCHAR(100),
    duration_of_labor INT(11),
    baby_sex INT(11),
    baby_condition INT(11),
    teo_given INT(11),
    birth_weight INT(11),
    bf_within_one_hour INT(11),
    birth_with_deformity INT(11),
    test_1_kit_name VARCHAR(50),
    test_1_kit_lot_no VARCHAR(50) DEFAULT NULL,
    test_1_kit_expiry DATE DEFAULT NULL,
    test_1_result VARCHAR(50) DEFAULT NULL,
    test_2_kit_name VARCHAR(50),
    test_2_kit_lot_no VARCHAR(50) DEFAULT NULL,
    test_2_kit_expiry DATE DEFAULT NULL,
    test_2_result VARCHAR(50) DEFAULT NULL,
    final_test_result VARCHAR(50) DEFAULT NULL,
    patient_given_result VARCHAR(50) DEFAULT NULL,
    partner_hiv_tested INT(11),
    partner_hiv_status INT(11),
    prophylaxis_given INT(11),
    baby_azt_dispensed INT(11),
    baby_nvp_dispensed INT(11),
    clinical_notes VARCHAR(200) DEFAULT NULL,

    CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
    CONSTRAINT unique_uuid UNIQUE(uuid),
    INDEX(visit_date),
    INDEX(encounter_id),
    INDEX(final_test_result),
    INDEX(baby_sex),
    INDEX( partner_hiv_tested),
    INDEX( partner_hiv_status)

  );
  SELECT "Successfully created etl_mchs_delivery table";

  -- ------------ create table etl_mchs_discharge-----------------------

  CREATE TABLE kenyaemr_etl.etl_mchs_discharge (
    uuid char(38),
    provider INT(11),
    patient_id INT(11) NOT NULL ,
    visit_id INT(11),
    visit_date DATE,
    location_id INT(11) DEFAULT NULL,
    encounter_id INT(11) NOT NULL PRIMARY KEY,
    date_created DATETIME NOT NULL,
    date_last_modified DATETIME,
    counselled_on_feeding INT(11),
    baby_status INT(11),
    vitamin_A_dispensed INT(11),
    birth_notification_number VARCHAR(100),
    condition_of_mother VARCHAR(100),
    discharge_date DATE,
    referred_from INT(11),
    referred_to INT(11),
    clinical_notes VARCHAR(200) DEFAULT NULL,
    CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
    CONSTRAINT unique_uuid UNIQUE(uuid),
    INDEX(visit_date),
    INDEX(encounter_id),
    INDEX(baby_status),
    INDEX(discharge_date)
  );
  SELECT "Successfully created etl_mchs_discharge table";

  -- ------------ create table etl_mch_postnatal_visit-----------------------

  CREATE TABLE kenyaemr_etl.etl_mch_postnatal_visit (
    uuid char(38),
    patient_id INT(11) NOT NULL ,
    visit_id INT(11),
    visit_date DATE,
    location_id INT(11) DEFAULT NULL,
    encounter_id INT(11) NOT NULL PRIMARY KEY,
    provider INT(11),
    pnc_register_no VARCHAR(50),
    pnc_visit_no INT(11),
    delivery_date DATE,
    mode_of_delivery INT(11),
    place_of_delivery INT(11),
    visit_timing_mother INT(11),
    visit_timing_baby INT(11),
    delivery_outcome INT(11),
    temperature DOUBLE,
    pulse_rate DOUBLE,
    systolic_bp DOUBLE,
    diastolic_bp DOUBLE,
    respiratory_rate DOUBLE,
    oxygen_saturation INT(11),
    weight DOUBLE,
    height DOUBLE,
    muac DOUBLE,
    hemoglobin DOUBLE,
    arv_status INT(11),
    general_condition INT(11),
    breast INT(11),
    cs_scar INT(11),
    gravid_uterus INT(11),
    episiotomy INT(11),
    lochia INT(11),
    counselled_on_infant_feeding INT(11),
    pallor INT(11),
    pallor_severity INT(11),
    pph INT(11),
    mother_hiv_status INT(11),
    condition_of_baby INT(11),
    baby_feeding_method INT(11),
    umblical_cord INT(11),
    baby_immunization_started INT(11),
    family_planning_counseling INT(11),
    other_maternal_complications VARCHAR(255),
    uterus_examination INT(11),
    uterus_cervix_examination VARCHAR(100),
    vaginal_examination VARCHAR(100),
    parametrial_examination VARCHAR(100),
    external_genitalia_examination VARCHAR(100),
    ovarian_examination VARCHAR(100),
    pelvic_lymph_node_exam VARCHAR(100),
    test_1_kit_name VARCHAR(50),
    test_1_kit_lot_no VARCHAR(50) DEFAULT NULL,
    test_1_kit_expiry DATE DEFAULT NULL,
    test_1_result VARCHAR(50) DEFAULT NULL,
    test_2_kit_name VARCHAR(50),
    test_2_kit_lot_no VARCHAR(50) DEFAULT NULL,
    test_2_kit_expiry DATE DEFAULT NULL,
    test_2_result VARCHAR(50) DEFAULT NULL,
    final_test_result VARCHAR(50) DEFAULT NULL,
    syphilis_results INT(11) DEFAULT NULL,
    patient_given_result VARCHAR(50) DEFAULT NULL,
    couple_counselled INT(11),
    partner_hiv_tested INT(11),
    partner_hiv_status INT(11),
    pnc_hiv_test_timing_mother INT(11),
    mother_haart_given INT(11),
    prophylaxis_given INT(11),
    infant_prophylaxis_timing INT(11),
    baby_azt_dispensed INT(11),
    baby_nvp_dispensed INT(11),
    pnc_exercises INT(11),
    maternal_condition INT(11),
    iron_supplementation INT(11),
    fistula_screening INT(11),
    cacx_screening INT(11),
    cacx_screening_method INT(11),
    family_planning_status INT(11),
    family_planning_method INT(11),
    referred_from INT(11),
    referred_to INT(11),
    clinical_notes VARCHAR(200) DEFAULT NULL,
    appointment_date DATE DEFAULT NULL,
    date_created DATETIME NOT NULL,
    date_last_modified DATETIME,
    CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
    CONSTRAINT unique_uuid UNIQUE(uuid),
    INDEX(visit_date),
    INDEX(encounter_id),
    INDEX(patient_id),
    INDEX(arv_status),
    INDEX(mother_hiv_status),
    INDEX(arv_status)
  );

  SELECT "Successfully created etl_mch_postnatal_visit table";
  -- ------------ create table etl_hei_enrollment-----------------------

  CREATE TABLE kenyaemr_etl.etl_hei_enrollment (
    serial_no INT(11)NOT NULL AUTO_INCREMENT,
    uuid char(38),
    patient_id INT(11) NOT NULL ,
    visit_id INT(11),
    visit_date DATE,
    location_id INT(11) DEFAULT NULL,
    provider INT(11),
    encounter_id INT(11) NOT NULL PRIMARY KEY,
    child_exposed INT(11),
    hei_id_number VARCHAR(50),
    spd_number VARCHAR(50),
    birth_weight DOUBLE,
    gestation_at_birth DOUBLE,
    birth_type VARCHAR(50),
    date_first_seen DATE,
    birth_notification_number VARCHAR(50),
    birth_certificate_number VARCHAR(50),
    need_for_special_care INT(11),
    reason_for_special_care INT(11),
    referral_source INT(11),
    transfer_in INT(11),
    transfer_in_date DATE,
    facility_transferred_from VARCHAR(50),
    district_transferred_from VARCHAR(50),
    date_first_enrolled_in_hei_care DATE,
    arv_prophylaxis INT(11),
    mother_breastfeeding INT(11),
    mother_on_NVP_during_breastfeeding INT(11),
    TB_contact_history_in_household INT(11),
    infant_mother_link INT(11),
    mother_alive INT(11),
    mother_on_pmtct_drugs INT(11),
    mother_on_drug INT(11),
    mother_on_art_at_infant_enrollment INT(11),
    mother_drug_regimen INT(11),
    infant_prophylaxis INT(11),
    parent_ccc_number VARCHAR(50),
    mode_of_delivery INT(11),
    place_of_delivery INT(11),
    birth_length INT(11),
    birth_order INT(11),
    health_facility_name VARCHAR(50),
    date_of_birth_notification DATE,
    date_of_birth_registration DATE,
    birth_registration_place VARCHAR(50),
    permanent_registration_serial VARCHAR(50),
    mother_facility_registered VARCHAR(50),
    exit_date DATE,
    exit_reason INT(11),
    hiv_status_at_exit VARCHAR(50),
    date_created DATETIME NOT NULL,
    date_last_modified DATETIME,
    CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
    CONSTRAINT unique_uuid UNIQUE(uuid),
    INDEX(visit_date),
    INDEX(encounter_id),
    INDEX(patient_id),
    INDEX(transfer_in),
    INDEX(child_exposed),
    INDEX(need_for_special_care),
    INDEX(reason_for_special_care),
    INDEX(referral_source),
    INDEX(transfer_in),
    INDEX(serial_no)
  );
  SELECT "Successfully created etl_hei_enrollment table";

  -- ------------ create table etl_hei_follow_up_visit-----------------------

  CREATE TABLE kenyaemr_etl.etl_hei_follow_up_visit (
    uuid char(38),
    provider INT(11),
    patient_id INT(11) NOT NULL ,
    visit_id INT(11),
    visit_date DATE,
    location_id INT(11) DEFAULT NULL,
    encounter_id INT(11) NOT NULL PRIMARY KEY,
    weight DOUBLE,
    height DOUBLE,
    muac INT(11),
    primary_caregiver INT(11),
    revisit_this_year INT(11),
    height_length INT(11),
    referred INT(11),
    referral_reason VARCHAR(255),
    danger_signs INT(11),
    infant_feeding INT(11),
    stunted INT(11),
    tb_assessment_outcome INT(11),
    social_smile_milestone INT(11),
    head_control_milestone INT(11),
    response_to_sound_milestone INT(11),
    hand_extension_milestone INT(11),
    sitting_milestone INT(11),
    walking_milestone INT(11),
    standing_milestone INT(11),
    talking_milestone INT(11),
    review_of_systems_developmental INT(11),
    weight_category INT(11),
    followup_type INT(11),
    dna_pcr_sample_date DATE,
    dna_pcr_contextual_status INT(11),
    dna_pcr_result INT(11),
    dna_pcr_dbs_sample_code VARCHAR(100),
    dna_pcr_results_date DATE,
    azt_given INT(11),
    nvp_given INT(11),
    ctx_given INT(11),
    multi_vitamin_given INT(11),
    first_antibody_sample_date DATE,
    first_antibody_result INT(11),
    first_antibody_dbs_sample_code VARCHAR(100),
    first_antibody_result_date DATE,
    final_antibody_sample_date DATE,
    final_antibody_result INT(11),
    final_antibody_dbs_sample_code VARCHAR(100),
    final_antibody_result_date DATE,
    tetracycline_ointment_given INT(11),
    pupil_examination INT(11),
    sight_examination INT(11),
    squint INT(11),
    deworming_drug INT(11),
    dosage INT(11),
    unit VARCHAR(100),
    vitaminA_given INT(11),
    disability INT(11),
    next_appointment_date DATE,
    comments VARCHAR(100),
    referred_from INT(11),
    referred_to INT(11),
    counselled_on INT(11),
    MNPS_Supplementation INT(11),
    LLIN INT(11),
    date_created DATETIME NOT NULL,
    date_last_modified DATETIME,
    CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
    CONSTRAINT unique_uuid UNIQUE(uuid),
    INDEX(visit_date),
    INDEX(encounter_id),
    INDEX(infant_feeding)
  );
  SELECT "Successfully created etl_hei_follow_up_visit table";

  -- ------- create table etl_hei_immunization table-----------------------------------------
  SELECT "Creating etl_hei_immunization table";
  CREATE TABLE kenyaemr_etl.etl_hei_immunization (
    encounter_id INT(11) NOT NULL PRIMARY KEY,
    patient_id INT(11) NOT NULL ,
    visit_date DATE,
    date_created DATETIME NOT NULL,
    date_last_modified DATETIME,
    created_by INT(11),
    BCG VARCHAR(50),
    OPV_birth VARCHAR(50),
    OPV_1 VARCHAR(50),
    OPV_2 VARCHAR(50),
    OPV_3 VARCHAR(50),
    IPV VARCHAR(50),
    DPT_Hep_B_Hib_1 VARCHAR(50),
    DPT_Hep_B_Hib_2 VARCHAR(50),
    DPT_Hep_B_Hib_3 VARCHAR(50),
    PCV_10_1 VARCHAR(50),
    PCV_10_2 VARCHAR(50),
    PCV_10_3 VARCHAR(50),
    ROTA_1 VARCHAR(50),
    ROTA_2 VARCHAR(50),
    ROTA_3 VARCHAR(50),
    Measles_rubella_1 VARCHAR(50),
    Measles_rubella_2 VARCHAR(50),
    Yellow_fever VARCHAR(50),
    Measles_6_months VARCHAR(50),
    VitaminA_6_months VARCHAR(50),
    VitaminA_1_yr VARCHAR(50),
    VitaminA_1_and_half_yr VARCHAR(50),
    VitaminA_2_yr VARCHAR(50),
    VitaminA_2_to_5_yr VARCHAR(50),
    fully_immunized INT(11),
    CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
    INDEX(visit_date),
    INDEX(encounter_id)


  );
  SELECT "Successfully created etl_hei_immunization table";

-- ------------ create table etl_tb_enrollment-----------------------

CREATE TABLE kenyaemr_etl.etl_tb_enrollment (
uuid char(38),
patient_id INT(11) NOT NULL ,
visit_id INT(11),
visit_date DATE,
location_id INT(11) DEFAULT NULL,
encounter_id INT(11) NOT NULL PRIMARY KEY,
provider INT(11),
date_treatment_started DATE,
district VARCHAR(50),
district_registration_number VARCHAR(20),
referred_by INT(11),
referral_date DATE,
date_transferred_in DATE,
facility_transferred_from VARCHAR(100),
district_transferred_from VARCHAR(100),
date_first_enrolled_in_tb_care DATE,
weight DOUBLE,
height DOUBLE,
treatment_supporter VARCHAR(100),
relation_to_patient INT(11),
treatment_supporter_address VARCHAR(100),
treatment_supporter_phone_contact VARCHAR(100),
disease_classification INT(11),
patient_classification INT(11),
pulmonary_smear_result INT(11),
has_extra_pulmonary_pleurial_effusion INT(11),
has_extra_pulmonary_milliary INT(11),
has_extra_pulmonary_lymph_node INT(11),
has_extra_pulmonary_menengitis INT(11),
has_extra_pulmonary_skeleton INT(11),
has_extra_pulmonary_abdominal INT(11),
has_extra_pulmonary_other VARCHAR(100),
treatment_outcome INT(11),
treatment_outcome_date DATE,
date_of_discontinuation DATETIME,
discontinuation_reason INT(11),
date_created DATETIME NOT NULL,
date_last_modified DATETIME,
CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
CONSTRAINT unique_uuid UNIQUE(uuid),
INDEX(visit_date),
INDEX(encounter_id),
INDEX(patient_id),
INDEX(disease_classification),
INDEX(patient_classification),
INDEX(pulmonary_smear_result),
INDEX(date_first_enrolled_in_tb_care)
);

-- ------------ create table etl_tb_follow_up_visit-----------------------

CREATE TABLE kenyaemr_etl.etl_tb_follow_up_visit (
uuid char(38),
provider INT(11),
patient_id INT(11) NOT NULL ,
visit_id INT(11),
visit_date DATE,
location_id INT(11) DEFAULT NULL,
encounter_id INT(11) NOT NULL PRIMARY KEY,
spatum_test INT(11),
spatum_result INT(11),
result_serial_number VARCHAR(20),
quantity DOUBLE ,
date_test_done DATE,
bacterial_colonie_growth INT(11),
number_of_colonies DOUBLE,
resistant_s INT(11),
resistant_r INT(11),
resistant_inh INT(11),
resistant_e INT(11),
sensitive_s INT(11),
sensitive_r INT(11),
sensitive_inh INT(11),
sensitive_e INT(11),
test_date DATE,
hiv_status INT(11),
next_appointment_date DATE,
date_created DATETIME NOT NULL,
date_last_modified DATETIME,
CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
CONSTRAINT unique_uuid UNIQUE(uuid),
INDEX(visit_date),
INDEX(encounter_id),
INDEX(patient_id),
INDEX(hiv_status)
);

-- ------------ create table etl_tb_screening-----------------------

CREATE TABLE kenyaemr_etl.etl_tb_screening (
uuid char(38),
provider INT(11),
patient_id INT(11) NOT NULL ,
visit_id INT(11),
visit_date DATE,
location_id INT(11) DEFAULT NULL,
encounter_id INT(11) NOT NULL PRIMARY KEY,
cough_for_2wks_or_more INT(11),
confirmed_tb_contact INT(11),
fever_for_2wks_or_more INT(11),
noticeable_weight_loss INT(11),
night_sweat_for_2wks_or_more INT(11),
lethargy INT(11),
spatum_smear_ordered INT(11) DEFAULT NULL,
chest_xray_ordered INT(11) DEFAULT NULL,
genexpert_ordered INT(11) DEFAULT NULL,
spatum_smear_result INT(11) DEFAULT NULL,
chest_xray_result INT(11) DEFAULT NULL,
genexpert_result INT(11) DEFAULT NULL,
referral INT(11) DEFAULT NULL,
clinical_tb_diagnosis INT(11) DEFAULT NULL,
resulting_tb_status INT(11),
contact_invitation INT(11) DEFAULT NULL,
evaluated_for_ipt INT(11) DEFAULT NULL,
started_anti_TB INT(11),
tb_treatment_start_date DATE DEFAULT NULL,
tb_prophylaxis VARCHAR(50),
notes VARCHAR(100),
person_present int(11),
date_created DATETIME NOT NULL,
date_last_modified DATETIME,
CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
CONSTRAINT unique_uuid UNIQUE(uuid),
INDEX(visit_date),
INDEX(encounter_id),
INDEX(patient_id),
INDEX(cough_for_2wks_or_more),
INDEX(confirmed_tb_contact),
INDEX(noticeable_weight_loss),
INDEX(night_sweat_for_2wks_or_more),
INDEX(resulting_tb_status)
);

-- ------------ create table etl_patients_booked_today-----------------------

CREATE TABLE kenyaemr_etl.etl_patients_booked_today(
id INT(11) NOT NULL PRIMARY KEY AUTO_INCREMENT,
patient_id INT(11) NOT NULL ,
last_visit_date DATE,
date_created DATETIME NOT NULL,
date_last_modified DATETIME,
CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
INDEX(patient_id)
);

-- ------------ create table etl_missed_appointments-----------------------

CREATE TABLE kenyaemr_etl.etl_missed_appointments(
id INT(11) NOT NULL PRIMARY KEY,
patient_id INT(11) NOT NULL ,
last_tca_date DATE,
last_visit_date DATE,
last_encounter_type VARCHAR(100),
days_since_last_visit INT(11),
date_table_created DATE,
date_created DATETIME NOT NULL,
date_last_modified DATETIME,
CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
INDEX(patient_id)
);

-- --------------------------- CREATE drug_event table ---------------------

  CREATE TABLE kenyaemr_etl.etl_drug_event(
    uuid CHAR(38) PRIMARY KEY,
    patient_id INT(11) NOT NULL,
    date_started DATE,
    visit_date DATE,
    provider INT(11),
    encounter_id INT(11) NOT NULL,
    program VARCHAR(50),
    regimen MEDIUMTEXT,
    regimen_name VARCHAR(100),
    regimen_line VARCHAR(50),
    discontinued INT(11),
    regimen_discontinued VARCHAR(255),
    regimen_stopped INT(11),
    date_discontinued DATE,
    reason_discontinued INT(11),
    reason_discontinued_other VARCHAR(100),
    date_created DATETIME NOT NULL,
    date_last_modified DATETIME,
    voided INT(11),
    CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
    INDEX(patient_id),
    INDEX(date_started),
    INDEX(date_discontinued),
    INDEX(patient_id, date_started)
  );

-- -------------------------- CREATE hts_test table ---------------------------------

create table kenyaemr_etl.etl_hts_test (
patient_id INT(11) not null,
visit_id INT(11) DEFAULT NULL,
encounter_id INT(11) NOT NULL primary key,
encounter_uuid CHAR(38) NOT NULL,
encounter_location INT(11) NOT NULL,
creator INT(11) NOT NULL,
date_created DATETIME NOT NULL,
date_last_modified DATETIME,
visit_date DATE,
test_type INT(11) DEFAULT NULL,
population_type VARCHAR(50),
key_population_type VARCHAR(50),
priority_population_type VARCHAR(50),
ever_tested_for_hiv VARCHAR(10),
months_since_last_test INT(11),
patient_disabled VARCHAR(50),
disability_type VARCHAR(255),
patient_consented VARCHAR(50) DEFAULT NULL,
client_tested_as VARCHAR(50),
setting VARCHAR(50),
approach VARCHAR(50),
test_strategy VARCHAR(50),
hts_entry_point VARCHAR(50),
hts_risk_category VARCHAR(50),
hts_risk_score DOUBLE,
test_1_kit_name VARCHAR(50),
test_1_kit_lot_no VARCHAR(50) DEFAULT NULL,
test_1_kit_expiry DATE DEFAULT NULL,
test_1_result VARCHAR(50) DEFAULT NULL,
test_2_kit_name VARCHAR(50),
test_2_kit_lot_no VARCHAR(50) DEFAULT NULL,
test_2_kit_expiry DATE DEFAULT NULL,
test_2_result VARCHAR(50) DEFAULT NULL,
final_test_result VARCHAR(50) DEFAULT NULL,
syphillis_test_result VARCHAR(50) DEFAULT NULL,
patient_given_result VARCHAR(50) DEFAULT NULL,
couple_discordant VARCHAR(100) DEFAULT NULL,
referred INT(10) DEFAULT NULL,
referral_for VARCHAR(100) DEFAULT NULL,
referral_facility VARCHAR(200) DEFAULT NULL,
other_referral_facility VARCHAR(200) DEFAULT NULL,
neg_referral_for VARCHAR(255) DEFAULT NULL,
neg_referral_specify VARCHAR(255) DEFAULT NULL,
tb_screening VARCHAR(20) DEFAULT NULL,
patient_had_hiv_self_test VARCHAR(50) DEFAULT NULL,
remarks VARCHAR(255) DEFAULT NULL,
voided INT(11),
index(patient_id),
index(visit_id),
index(tb_screening),
index(visit_date),
index(population_type),
index(hts_risk_category),
index(hts_risk_score),
index(test_type),
index(final_test_result),
index(couple_discordant),
index(test_1_kit_name),
index(test_2_kit_name)
);

-- ------------- CREATE HTS LINKAGE AND REFERRALS ------------------------

CREATE TABLE kenyaemr_etl.etl_hts_referral_and_linkage (
patient_id INT(11) not null,
visit_id INT(11) DEFAULT NULL,
encounter_id INT(11) NOT NULL primary key,
encounter_uuid CHAR(38) NOT NULL,
encounter_location INT(11) NOT NULL,
creator INT(11) NOT NULL,
date_created DATETIME NOT NULL,
date_last_modified DATETIME,
visit_date DATE,
tracing_type VARCHAR(50),
tracing_status VARCHAR(100),
ccc_number VARCHAR(100),
referral_facility VARCHAR(200) DEFAULT NULL,
facility_linked_to VARCHAR(100),
enrollment_date DATE,
art_start_date DATE,
provider_handed_to VARCHAR(100),
cadre VARCHAR(100),
voided INT(11),
index(patient_id),
index(visit_date),
index(tracing_type),
index(tracing_status)
);


-- -------------- create referral form ----------------------------

CREATE TABLE kenyaemr_etl.etl_hts_referral (
patient_id INT(11) not null,
visit_id INT(11) DEFAULT NULL,
encounter_id INT(11) NOT NULL primary key,
encounter_uuid CHAR(38) NOT NULL,
encounter_location INT(11) NOT NULL,
creator INT(11) NOT NULL,
date_created DATETIME NOT NULL,
date_last_modified DATETIME,
visit_date DATE,
facility_referred_to VARCHAR(50),
date_to_enrol DATE DEFAULT NULL,
remarks VARCHAR(100),
voided INT(11),
index(patient_id),
index(visit_date)
);


-- ------------ create table etl_ipt_screening-----------------------

CREATE TABLE kenyaemr_etl.etl_ipt_screening (
uuid char(38),
provider INT(11),
patient_id INT(11) NOT NULL ,
visit_id INT(11),
visit_date DATE,
location_id INT(11) DEFAULT NULL,
encounter_id INT(11),
obs_id INT(11) NOT NULL PRIMARY KEY,
cough INT(11) DEFAULT NULL,
fever INT(11) DEFAULT NULL,
weight_loss_poor_gain INT(11) DEFAULT NULL,
night_sweats INT(11) DEFAULT NULL,
contact_with_tb_case INT(11) DEFAULT NULL,
lethargy INT(11) DEFAULT NULL,
yellow_urine INT(11),
numbness_bs_hands_feet INT(11),
eyes_yellowness INT(11),
upper_rightQ_abdomen_tenderness INT(11),
date_created DATETIME NOT NULL,
date_last_modified DATETIME,
voided INT(11),
CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
INDEX(visit_date),
INDEX(patient_id),
INDEX(obs_id),
INDEX(visit_date, patient_id),
INDEX(encounter_id)
);

-- ------------ create table etl_ipt_follow_up -----------------------
CREATE TABLE kenyaemr_etl.etl_ipt_follow_up (
uuid char(38),
patient_id INT(11) NOT NULL ,
visit_id INT(11),
visit_date DATE,
location_id INT(11) DEFAULT NULL,
encounter_id INT(11) NOT NULL PRIMARY KEY,
provider INT(11),
date_created DATETIME NOT NULL,
date_last_modified DATETIME,
ipt_due_date DATE DEFAULT NULL,
date_collected_ipt DATE DEFAULT NULL,
weight DOUBLE,
hepatotoxity VARCHAR(100) DEFAULT NULL,
peripheral_neuropathy VARCHAR(100) DEFAULT NULL ,
rash VARCHAR(100),
adherence VARCHAR(100),
action_taken VARCHAR(100),
voided INT(11),
CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
CONSTRAINT unique_uuid UNIQUE(uuid),
INDEX(visit_date),
INDEX(encounter_id),
INDEX(patient_id),
INDEX(hepatotoxity),
INDEX(peripheral_neuropathy),
INDEX(rash),
INDEX(adherence)
);

CREATE TABLE kenyaemr_etl.etl_ccc_defaulter_tracing (
uuid char(38),
provider INT(11),
patient_id INT(11) NOT NULL ,
visit_id INT(11),
visit_date DATE,
location_id INT(11) DEFAULT NULL,
encounter_id INT(11) NOT NULL PRIMARY KEY,
tracing_type INT(11),
missed_appointment_date DATE,
reason_for_missed_appointment INT(11),
non_coded_missed_appointment_reason VARCHAR(100),
tracing_outcome INT(11),
reason_not_contacted INT(11),
attempt_number INT(11),
is_final_trace INT(11),
true_status INT(11),
cause_of_death INT(11),
comments VARCHAR(100),
booking_date DATE,
date_created DATETIME NOT NULL,
date_last_modified DATETIME,
CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
CONSTRAINT unique_uuid UNIQUE(uuid),
INDEX(visit_date),
INDEX(encounter_id),
INDEX(patient_id),
INDEX(missed_appointment_date),
INDEX(true_status),
INDEX(cause_of_death),
INDEX(tracing_type)
);

-- ------------ create table etl_ART_preparation-----------------------
CREATE TABLE kenyaemr_etl.etl_ART_preparation (
  uuid char(38),
  patient_id INT(11) NOT NULL ,
  visit_id INT(11),
  visit_date DATE,
  location_id INT(11) DEFAULT NULL,
  encounter_id INT(11) NOT NULL PRIMARY KEY,
  provider INT(11),
  understands_hiv_art_benefits varchar(10),
  screened_negative_substance_abuse varchar(10),
  screened_negative_psychiatric_illness varchar(10),
  HIV_status_disclosure varchar(10),
  trained_drug_admin varchar(10),
  informed_drug_side_effects varchar(10),
  caregiver_committed varchar(10),
  adherance_barriers_identified varchar(10),
  caregiver_location_contacts_known varchar(10),
  ready_to_start_art varchar(10),
  identified_drug_time varchar(10),
  treatment_supporter_engaged varchar(10),
  support_grp_meeting_awareness varchar(10),
  enrolled_in_reminder_system varchar(10),
  other_support_systems varchar(10),
  date_created DATETIME NOT NULL,
  date_last_modified DATETIME,
  CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
  CONSTRAINT unique_uuid UNIQUE(uuid),
  INDEX(visit_date),
  INDEX(encounter_id),
  INDEX(ready_to_start_art)
);
SELECT "Successfully created etl_ART_preparation table";

  -- ------------ create table etl_enhanced_adherence-----------------------
  CREATE TABLE kenyaemr_etl.etl_enhanced_adherence (
    uuid char(38),
    patient_id INT(11) NOT NULL ,
    visit_id INT(11),
    visit_date DATE,
    location_id INT(11) DEFAULT NULL,
    encounter_id INT(11) NOT NULL PRIMARY KEY,
    provider INT(11),
    session_number INT(11),
    first_session_date DATE,
    pill_count INT(11),
    MMAS4_1_forgets_to_take_meds varchar(255),
    MMAS4_2_careless_taking_meds varchar(255),
    MMAS4_3_stops_on_reactive_meds varchar(255),
    MMAS4_4_stops_meds_on_feeling_good varchar(255),
    MMSA8_1_took_meds_yesterday varchar(255),
    MMSA8_2_stops_meds_on_controlled_symptoms varchar(255),
    MMSA8_3_struggles_to_comply_tx_plan varchar(255),
    MMSA8_4_struggles_remembering_taking_meds varchar(255),
    arv_adherence varchar(50),
    has_vl_results varchar(10),
    vl_results_suppressed varchar(10),
    vl_results_feeling varchar(255),
    cause_of_high_vl varchar(255),
    way_forward varchar(255),
    patient_hiv_knowledge varchar(255),
    patient_drugs_uptake varchar(255),
    patient_drugs_reminder_tools varchar(255),
    patient_drugs_uptake_during_travels varchar(255),
    patient_drugs_side_effects_response varchar(255),
    patient_drugs_uptake_most_difficult_times varchar(255),
    patient_drugs_daily_uptake_feeling varchar(255),
    patient_ambitions varchar(255),
    patient_has_people_to_talk varchar(10),
    patient_enlisting_social_support varchar(255),
    patient_income_sources varchar(255),
    patient_challenges_reaching_clinic varchar(10),
    patient_worried_of_accidental_disclosure varchar(10),
    patient_treated_differently varchar(10),
    stigma_hinders_adherence varchar(10),
    patient_tried_faith_healing varchar(10),
    patient_adherence_improved varchar(10),
    patient_doses_missed varchar(10),
    review_and_barriers_to_adherence varchar(255),
    other_referrals varchar(10),
    appointments_honoured varchar(10),
    referral_experience varchar(255),
    home_visit_benefit varchar(10),
    adherence_plan varchar(255),
    next_appointment_date DATE,
    date_created DATETIME NOT NULL,
    date_last_modified DATETIME,
    CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
    CONSTRAINT unique_uuid UNIQUE(uuid),
    INDEX(visit_date),
    INDEX(encounter_id)
    );
  SELECT "Successfully created etl_enhanced_adherence table";

  -- ------------ create table etl_patient_triage----------------------
  CREATE TABLE kenyaemr_etl.etl_patient_triage (
    uuid CHAR(38),
    encounter_id INT(11) NOT NULL PRIMARY KEY,
    patient_id INT(11) NOT NULL ,
    location_id INT(11) DEFAULT NULL,
    visit_date DATE,
    visit_id INT(11),
    encounter_provider INT(11),
    date_created DATETIME NOT NULL,
    date_last_modified DATETIME,
    visit_reason VARCHAR(255),
    complaint_today varchar(10),
    complaint_duration DOUBLE,
    weight DOUBLE,
    height DOUBLE,
    systolic_pressure DOUBLE,
    diastolic_pressure DOUBLE,
    temperature DOUBLE,
    pulse_rate DOUBLE,
    respiratory_rate DOUBLE,
    oxygen_saturation DOUBLE,
    muac DOUBLE,
    z_score_absolute DOUBLE DEFAULT NULL,
    z_score INT(11),
    nutritional_status INT(11) DEFAULT NULL,
    last_menstrual_period DATE,
    hpv_vaccinated INT(11),
    voided INT(11),
    CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
    CONSTRAINT unique_uuid UNIQUE(uuid),
    INDEX(visit_date),
    INDEX(encounter_id),
    INDEX(patient_id),
    INDEX(patient_id, visit_date)
  );

  SELECT "Successfully created etl_patient_triage table";

  -- ------------ create table etl_generalized_anxiety_disorder-----------------------
  CREATE TABLE kenyaemr_etl.etl_generalized_anxiety_disorder (
    uuid CHAR(38),
    encounter_id INT(11) NOT NULL PRIMARY KEY,
    patient_id INT(11) NOT NULL ,
    location_id INT(11) DEFAULT NULL,
    visit_date DATE,
    visit_id INT(11),
    encounter_provider INT(11),
    date_created DATETIME NOT NULL,
    date_last_modified DATETIME,
    feeling_nervous_anxious INT(11),
    control_worrying INT(11),
    worrying_much INT(11),
    trouble_relaxing INT(11),
    being_restless INT(11),
    feeling_bad INT(11),
    feeling_afraid INT(11),
    assessment_outcome INT(11),
    voided INT(11),
    CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
    CONSTRAINT unique_uuid UNIQUE(uuid),
    INDEX(visit_date),
    INDEX(encounter_id),
    INDEX(patient_id),
    INDEX(patient_id, visit_date)
  );

  SELECT "Successfully created etl_generalized_anxiety_disorder table";




  -- ------------ create table etl_prep_behaviour_risk_assessment-----------------------

  CREATE TABLE kenyaemr_etl.etl_prep_behaviour_risk_assessment (
    uuid char(38),
    provider INT(11),
    patient_id INT(11) NOT NULL ,
    visit_id INT(11),
    visit_date DATE,
    location_id INT(11) DEFAULT NULL,
    encounter_id INT(11) NOT NULL PRIMARY KEY,
    date_created DATETIME NOT NULL,
    date_last_modified DATETIME,
    sexual_partner_hiv_status varchar(255),
    sexual_partner_on_art varchar(10),
    risk varchar(255),
    high_risk_partner varchar(50),
    sex_with_multiple_partners varchar(10),
    ipv_gbv varchar(10),
    transactional_sex varchar(10),
    recent_sti_infected varchar(10),
    recurrent_pep_use varchar(10),
    recurrent_sex_under_influence varchar(10),
    inconsistent_no_condom_use varchar(10),
    sharing_drug_needles varchar(255),
    other_reasons varchar(10),
    other_reason_specify varchar(255),
    assessment_outcome varchar(255),
    risk_education_offered varchar(10),
    risk_reduction varchar(10),
    willing_to_take_prep varchar(10),
    reason_not_willing varchar(255),
    risk_edu_offered varchar(10),
    risk_education varchar(255),
    referral_for_prevention_services varchar(500),
    referral_facility VARCHAR(255),
    time_partner_hiv_positive_known varchar(255),
    partner_enrolled_ccc varchar(255),
    partner_ccc_number varchar(255),
    partner_art_start_date DATE,
    serodiscordant_confirmation_date DATE,
    HIV_serodiscordant_duration_months int(11),
    recent_unprotected_sex_with_positive_partner varchar(10),
    children_with_hiv_positive_partner varchar(255),
    voided INT(11),
    CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
    CONSTRAINT unique_uuid UNIQUE(uuid),
    INDEX(visit_date),
    INDEX(encounter_id)
  );
  SELECT "Successfully created etl_prep_behaviour_risk_assessment table";

  -- ------------ create table etl_prep_monthly_refill-----------------------

  CREATE TABLE kenyaemr_etl.etl_prep_monthly_refill (
    uuid char(38),
    provider INT(11),
    patient_id INT(11) NOT NULL ,
    visit_id INT(11),
    visit_date DATE,
    location_id INT(11) DEFAULT NULL,
    encounter_id INT(11) NOT NULL PRIMARY KEY,
    date_created DATETIME NOT NULL,
    date_last_modified DATETIME,
    assessed_for_behavior_risk     varchar(255),
    risk_for_hiv_positive_partner  varchar(255),
    client_assessment  varchar(255),
    adherence_assessment varchar(255),
    poor_adherence_reasons varchar(255),
    other_poor_adherence_reasons varchar(255),
    adherence_counselling_done varchar(10),
    prep_status varchar(255),
    switching_option VARCHAR(255),
    switching_date DATE,
    prep_type VARCHAR(10),
    prescribed_prep_today varchar(10),
    prescribed_regimen varchar(10),
    prescribed_regimen_months varchar(10),
    number_of_condoms_issued INT(11),
    prep_discontinue_reasons varchar(255),
    prep_discontinue_other_reasons varchar(255),
    appointment_given varchar(10),
    next_appointment DATE,
    remarks varchar(255),
    voided INT(11),
    CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
    CONSTRAINT unique_uuid UNIQUE(uuid),
    INDEX(visit_date),
    INDEX(encounter_id)

  );
  SELECT "Successfully created etl_prep_monthly_refill table";

-- ------------ create table etl_prep_discontinuation-----------------------

  CREATE TABLE kenyaemr_etl.etl_prep_discontinuation (
    uuid char(38),
    provider INT(11),
    patient_id INT(11) NOT NULL ,
    visit_id INT(11),
    visit_date DATE,
    location_id INT(11) DEFAULT NULL,
    encounter_id INT(11) NOT NULL PRIMARY KEY,
    date_created DATETIME NOT NULL,
    date_last_modified DATETIME,
    discontinue_reason VARCHAR(255),
    care_end_date DATE,
    last_prep_dose_date DATE,
    voided INT(11),
    CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
    CONSTRAINT unique_uuid UNIQUE(uuid),
    INDEX(visit_date),
    INDEX(encounter_id),
    INDEX(discontinue_reason),
    INDEX(care_end_date)

  );
  SELECT "Successfully created etl_prep_discontinuation table";

  -- ------------ create table etl_prep_enrollment-----------------------
  CREATE TABLE kenyaemr_etl.etl_prep_enrolment (
    uuid char(38),
    provider INT(11),
    patient_id INT(11) NOT NULL ,
    visit_id INT(11),
    visit_date DATE,
    location_id INT(11) DEFAULT NULL,
    encounter_id INT(11) NOT NULL PRIMARY KEY,
    date_created DATETIME NOT NULL,
    date_last_modified DATETIME,
    patient_type VARCHAR(255),
    population_type VARCHAR(255),
    kp_type VARCHAR(255),
    transfer_in_entry_point VARCHAR(255),
    referred_from VARCHAR(255),
    transit_from VARCHAR(255),
    transfer_in_date DATE,
    transfer_from VARCHAR(255),
    initial_enrolment_date DATE,
    date_started_prep_trf_facility DATE,
    previously_on_prep VARCHAR(10),
    prep_type VARCHAR(10),
    regimen VARCHAR(255),
    prep_last_date DATE,
    in_school VARCHAR(10),
    buddy_name VARCHAR(255),
    buddy_alias VARCHAR(255),
    buddy_relationship VARCHAR(255),
    buddy_phone VARCHAR(255),
    buddy_alt_phone VARCHAR(255),
    voided INT(11),
    CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
    CONSTRAINT unique_uuid UNIQUE(uuid),
    INDEX(visit_date),
    INDEX(encounter_id)

  );
  SELECT "Successfully created etl_prep_enrollment table";

   -- ------------ create table etl_prep_followup-----------------------

  CREATE TABLE kenyaemr_etl.etl_prep_followup (
    uuid char(38),
    form VARCHAR(50),
    provider INT(11),
    patient_id INT(11) NOT NULL,
    visit_id INT(11),
    visit_date DATE,
    location_id INT(11) DEFAULT NULL,
    encounter_id INT(11) NOT NULL PRIMARY KEY,
    date_created DATETIME NOT NULL,
    date_last_modified DATETIME,
    sti_screened VARCHAR(10),
    genital_ulcer_disease VARCHAR(255),
    vaginal_discharge VARCHAR(255),
    cervical_discharge VARCHAR(255),
    pid VARCHAR(255),
    urethral_discharge VARCHAR(255),
    anal_discharge VARCHAR(255),
    other_sti_symptoms VARCHAR(255),
    sti_treated VARCHAR(10),
    vmmc_screened VARCHAR(10),
    vmmc_status VARCHAR(255),
    vmmc_referred VARCHAR(255),
    lmp DATE,
    menopausal_status VARCHAR(10),
    pregnant VARCHAR(10),
    edd DATE,
    planned_pregnancy VARCHAR(10),
    wanted_pregnancy VARCHAR(10),
    breastfeeding VARCHAR(10),
    fp_status VARCHAR(255),
    fp_method VARCHAR(500),
    ended_pregnancy VARCHAR(255),
    pregnancy_outcome VARCHAR(10),
    outcome_date DATE,
    defects VARCHAR(10),
    has_chronic_illness VARCHAR(10),
    adverse_reactions VARCHAR(255),
    known_allergies VARCHAR(10),
    hepatitisB_vaccinated VARCHAR(10),
    hepatitisB_treated VARCHAR(10),
    hepatitisC_vaccinated VARCHAR(10),
    hepatitisC_treated VARCHAR(10),
    hiv_signs VARCHAR(10),
    adherence_counselled VARCHAR(10),
    adherence_outcome VARCHAR(50),
    poor_adherence_reasons varchar(255),
    other_poor_adherence_reasons varchar(255),
    prep_contraindications VARCHAR(255),
    treatment_plan VARCHAR(255),
    switching_option VARCHAR(255),
    switching_date DATE,
    prep_type VARCHAR(10),
    prescribed_PrEP VARCHAR(10),
    regimen_prescribed VARCHAR(255),
    months_prescribed_regimen INT(11),
    condoms_issued VARCHAR(10),
    number_of_condoms VARCHAR(10),
    appointment_given VARCHAR(10),
    appointment_date DATE,
    reason_no_appointment VARCHAR(255),
    clinical_notes VARCHAR(255),
    voided INT(11),
    CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
    CONSTRAINT unique_uuid UNIQUE(uuid),
    INDEX(visit_date),
    INDEX(encounter_id),
    INDEX(form)
  );
  SELECT "Successfully created etl_prep_followup table";

   -- ------------ create table etl_progress_note-----------------------

  CREATE TABLE kenyaemr_etl.etl_progress_note (
    uuid char(38),
    provider INT(11),
    patient_id INT(11) NOT NULL ,
    visit_id INT(11),
    visit_date DATE,
    location_id INT(11) DEFAULT NULL,
    encounter_id INT(11) NOT NULL PRIMARY KEY,
    date_created DATETIME NOT NULL,
    date_last_modified DATETIME,
    notes VARCHAR(255),
    voided INT(11),
    CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
    CONSTRAINT unique_uuid UNIQUE(uuid),
    INDEX(visit_date),
    INDEX(encounter_id)

  );
  SELECT "Successfully created etl_progress_note table";

-- ------------ create table etl_ipt_initiation -----------------------
  CREATE TABLE kenyaemr_etl.etl_ipt_initiation (
    uuid CHAR(38),
    encounter_id INT(11) NOT NULL PRIMARY KEY,
    patient_id INT(11) NOT NULL ,
    location_id INT(11) DEFAULT NULL,
    visit_date DATE,
    encounter_provider INT(11),
    date_created DATETIME NOT NULL,
    date_last_modified DATETIME,
    ipt_indication INT(11),
    sub_county_reg_number VARCHAR(255),
    sub_county_reg_date DATE,
    voided INT(11),
    CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
    CONSTRAINT unique_uuid UNIQUE(uuid),
    INDEX(visit_date),
    INDEX(encounter_id),
    INDEX(patient_id),
    INDEX(patient_id, visit_date)
  );

  SELECT "Successfully created etl_ipt_initiation table";
  -- ------------------- creating ipt followup table --------------------------

  /*CREATE TABLE kenyaemr_etl.etl_ipt_followup (
    uuid CHAR(38),
    encounter_id INT(11) NOT NULL PRIMARY KEY,
    patient_id INT(11) NOT NULL ,
    visit_id INT(11) DEFAULT NULL,
    location_id INT(11) DEFAULT NULL,
    visit_date DATE,
    encounter_provider INT(11),
    date_created DATETIME,
    ipt_due_date DATE,
    date_collected_ipt DATE,
    has_hepatoxicity INT(11),
    has_rash INT(11),
    has_peripheral_neuropathy INT(11),
    adherence INT(11),
    action_taken VARCHAR(100),
    voided INT(11),
    CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
    CONSTRAINT unique_uuid UNIQUE(uuid),
    INDEX(visit_date),
    INDEX(encounter_id),
    INDEX(patient_id),
    INDEX(adherence)
  );

  SELECT "Successfully created etl_ipt_followup table";
*/
  -- --------------------- creating ipt outcome table -------------------------------
  CREATE TABLE kenyaemr_etl.etl_ipt_outcome (
    uuid CHAR(38),
    encounter_id INT(11) NOT NULL PRIMARY KEY,
    patient_id INT(11) NOT NULL ,
    location_id INT(11) DEFAULT NULL,
    visit_date DATE,
    encounter_provider INT(11),
    date_created DATETIME NOT NULL,
    date_last_modified DATETIME,
    outcome INT(11),
    voided INT(11),
    CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
    CONSTRAINT unique_uuid UNIQUE(uuid),
    INDEX(visit_date),
    INDEX(encounter_id),
    INDEX(patient_id),
    INDEX(outcome),
    INDEX(patient_id, visit_date)
  );

  SELECT "Successfully created etl_ipt_outcome table";

  -- --------------------- creating hts tracing table -------------------------------
  CREATE TABLE kenyaemr_etl.etl_hts_linkage_tracing (
    uuid CHAR(38),
    encounter_id INT(11) NOT NULL PRIMARY KEY,
    patient_id INT(11) NOT NULL ,
    location_id INT(11) DEFAULT NULL,
    visit_date DATE,
    encounter_provider INT(11),
    date_created DATETIME NOT NULL,
    date_last_modified DATETIME,
    tracing_type INT(11),
    tracing_outcome INT(11),
    reason_not_contacted INT(11),
    voided INT(11),
    CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
    CONSTRAINT unique_uuid UNIQUE(uuid),
    INDEX(visit_date),
    INDEX(encounter_id),
    INDEX(patient_id),
    INDEX(tracing_type),
    INDEX(tracing_outcome),
    INDEX(reason_not_contacted),
    INDEX(patient_id, visit_date)
  );

  SELECT "Successfully created etl_hts_linkage_tracing table";

-- ------------------------ create patient program table ---------------------

CREATE TABLE kenyaemr_etl.etl_patient_program (
    uuid CHAR(38) NOT NULL PRIMARY KEY,
    patient_id INT(11) NOT NULL ,
    location_id INT(11) DEFAULT NULL,
    program VARCHAR(100) NOT NULL,
    date_enrolled DATE NOT NULL,
    date_completed DATE DEFAULT NULL,
    outcome INT(11),
    date_created DATETIME NOT NULL,
    date_last_modified DATETIME,
    voided INT(11),
    CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
    CONSTRAINT unique_uuid UNIQUE(uuid),
    INDEX(date_enrolled),
    INDEX(date_completed),
    INDEX(patient_id),
    INDEX(outcome)
  );

  -- ------------------------ create person address table ---------------------

  CREATE TABLE kenyaemr_etl.etl_person_address (
    uuid CHAR(38) NOT NULL PRIMARY KEY,
    patient_id INT(11) NOT NULL ,
    county VARCHAR(100) DEFAULT NULL,
    sub_county VARCHAR(100) DEFAULT NULL,
    location VARCHAR(100) DEFAULT NULL,
    ward VARCHAR(100) DEFAULT NULL,
    sub_location VARCHAR(100) DEFAULT NULL,
    village VARCHAR(100) DEFAULT NULL,
    postal_address VARCHAR(100) DEFAULT NULL,
    land_mark VARCHAR(100) DEFAULT NULL,
    voided INT(11),
    CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
    CONSTRAINT unique_uuid UNIQUE(uuid),
    INDEX(patient_id)
  );

   -- --------------------- creating OTZ activity table -------------------------------

  CREATE TABLE kenyaemr_etl.etl_otz_activity (
    uuid CHAR(38),
    encounter_id INT(11) NOT NULL PRIMARY KEY,
    patient_id INT(11) NOT NULL ,
    location_id INT(11) DEFAULT NULL,
    visit_id INT(11),
    visit_date DATE,
    encounter_provider INT(11),
    date_created DATETIME NOT NULL,
    date_last_modified DATETIME,
    orientation VARCHAR(11) DEFAULT NULL,
    leadership VARCHAR(11) DEFAULT NULL,
    participation VARCHAR(11) DEFAULT NULL,
    treatment_literacy VARCHAR(11) DEFAULT NULL,
    transition_to_adult_care VARCHAR(11) DEFAULT NULL,
    making_decision_future VARCHAR(11) DEFAULT NULL,
    srh VARCHAR(11) DEFAULT NULL,
    beyond_third_ninety VARCHAR(11) DEFAULT NULL,
    attended_support_group VARCHAR(11) DEFAULT NULL,
    remarks VARCHAR(255) DEFAULT NULL,
    voided INT(11),
    CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
    CONSTRAINT unique_uuid UNIQUE(uuid),
    INDEX(visit_date),
    INDEX(encounter_id),
    INDEX(patient_id),
    INDEX(patient_id, visit_date)
  );

  SELECT "Successfully created etl_otz_activity table";


   -- --------------------- creating OTZ enrollment table -------------------------------

  CREATE TABLE kenyaemr_etl.etl_otz_enrollment (
    uuid CHAR(38),
    encounter_id INT(11) NOT NULL PRIMARY KEY,
    patient_id INT(11) NOT NULL ,
    location_id INT(11) DEFAULT NULL,
    visit_date DATE,
    encounter_provider INT(11),
    date_created DATETIME NOT NULL,
    date_last_modified DATETIME,
    orientation VARCHAR(11) DEFAULT NULL,
    leadership VARCHAR(11) DEFAULT NULL,
    participation VARCHAR(11) DEFAULT NULL,
    treatment_literacy VARCHAR(11) DEFAULT NULL,
    transition_to_adult_care VARCHAR(11) DEFAULT NULL,
    making_decision_future VARCHAR(11) DEFAULT NULL,
    srh VARCHAR(11) DEFAULT NULL,
    beyond_third_ninety VARCHAR(11) DEFAULT NULL,
    transfer_in VARCHAR(11) DEFAULT NULL,
    voided INT(11),
    CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
    CONSTRAINT unique_uuid UNIQUE(uuid),
    INDEX(visit_date),
    INDEX(encounter_id),
    INDEX(patient_id),
    INDEX(patient_id, visit_date)
  );

  SELECT "Successfully created etl_otz_enrollment table";

   -- --------------------- creating OVC enrollment table -------------------------------
  CREATE TABLE kenyaemr_etl.etl_ovc_enrolment (
    uuid CHAR(38),
    encounter_id INT(11) NOT NULL PRIMARY KEY,
    patient_id INT(11) NOT NULL ,
    location_id INT(11) DEFAULT NULL,
    visit_id INT(11),
    visit_date DATE,
    encounter_provider INT(11),
    date_created DATETIME NOT NULL,
    date_last_modified DATETIME,
    caregiver_enrolled_here VARCHAR(11) DEFAULT NULL,
    caregiver_name VARCHAR(11) DEFAULT NULL,
    caregiver_gender VARCHAR(255) DEFAULT NULL,
    relationship_to_client VARCHAR(255) DEFAULT NULL,
    caregiver_phone_number VARCHAR(255) DEFAULT NULL,
    client_enrolled_cpims VARCHAR(11) DEFAULT NULL,
    partner_offering_ovc VARCHAR(255) DEFAULT NULL,
    ovc_comprehensive_program VARCHAR(255) DEFAULT NULL,
    dreams_program VARCHAR(255) DEFAULT NULL,
    ovc_preventive_program VARCHAR(255) DEFAULT NULL,
    voided INT(11),
    CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
    CONSTRAINT unique_uuid UNIQUE(uuid),
    INDEX(visit_date),
    INDEX(encounter_id),
    INDEX(patient_id),
    INDEX(patient_id, visit_date)
  );

  SELECT "Successfully created etl_ovc_enrolment table";

      -- --------------------- creating Cervical cancer screening table -------------------------------
  CREATE TABLE kenyaemr_etl.etl_cervical_cancer_screening (
    uuid CHAR(38),
    encounter_id INT(11) NOT NULL PRIMARY KEY,
    encounter_provider INT(11),
    patient_id INT(11) NOT NULL,
    visit_id INT(11) DEFAULT NULL,
    visit_date DATE,
    location_id INT(11) DEFAULT NULL,
    date_created DATETIME NOT NULL,
    date_last_modified DATETIME,
    visit_type VARCHAR(255) DEFAULT NULL,
    screening_type VARCHAR(255) DEFAULT NULL,
    post_treatment_complication_cause VARCHAR(255) DEFAULT NULL,
    post_treatment_complication_other VARCHAR(255) DEFAULT NULL,
    cervical_cancer VARCHAR(255) DEFAULT NULL,
    colposcopy_screening_method VARCHAR(255) DEFAULT NULL,
    hpv_screening_method VARCHAR(255) DEFAULT NULL,
    pap_smear_screening_method VARCHAR(255) DEFAULT NULL,
    via_vili_screening_method VARCHAR(255) DEFAULT NULL,
    colposcopy_screening_result VARCHAR(255) DEFAULT NULL,
    hpv_screening_result VARCHAR(255) DEFAULT NULL,
    pap_smear_screening_result VARCHAR(255) DEFAULT NULL,
    via_vili_screening_result VARCHAR(255) DEFAULT NULL,
    colposcopy_treatment_method VARCHAR(255) DEFAULT NULL,
    hpv_treatment_method VARCHAR(255) DEFAULT NULL,
    pap_smear_treatment_method VARCHAR(255) DEFAULT NULL,
    via_vili_treatment_method VARCHAR(255) DEFAULT NULL,
    colorectal_cancer VARCHAR(255) DEFAULT NULL,
    fecal_occult_screening_method VARCHAR(255) DEFAULT NULL,
    colonoscopy_method VARCHAR(255) DEFAULT NULL,
    fecal_occult_screening_results VARCHAR(255) DEFAULT NULL,
    colonoscopy_method_results VARCHAR(255) DEFAULT NULL,
    fecal_occult_screening_treatment VARCHAR(255) DEFAULT NULL,
    colonoscopy_method_treatment VARCHAR(255) DEFAULT NULL,
    retinoblastoma_cancer VARCHAR(255) DEFAULT NULL,
    retinoblastoma_eua_screening_method VARCHAR(255) DEFAULT NULL,
    retinoblastoma_gene_method VARCHAR(255) DEFAULT NULL,
    retinoblastoma_eua_screening_results VARCHAR(255) DEFAULT NULL,
    retinoblastoma_gene_method_results VARCHAR(255) DEFAULT NULL,
    retinoblastoma_eua_treatment VARCHAR(255) DEFAULT NULL,
    retinoblastoma_gene_treatment VARCHAR(255) DEFAULT NULL,

    oral_cancer VARCHAR(255) DEFAULT NULL,
    oral_cancer_visual_exam_method VARCHAR(255) DEFAULT NULL,
    oral_cancer_cytology_method VARCHAR(255) DEFAULT NULL,
    oral_cancer_imaging_method VARCHAR(255) DEFAULT NULL,
    oral_cancer_biopsy_method VARCHAR(255) DEFAULT NULL,
    oral_cancer_visual_exam_results VARCHAR(255) DEFAULT NULL,
    oral_cancer_cytology_results VARCHAR(255) DEFAULT NULL,
    oral_cancer_imaging_results VARCHAR(255) DEFAULT NULL,
    oral_cancer_biopsy_results VARCHAR(255) DEFAULT NULL,
    oral_cancer_visual_exam_treatment VARCHAR(255) DEFAULT NULL,
    oral_cancer_cytology_treatment VARCHAR(255) DEFAULT NULL,
    oral_cancer_imaging_treatment VARCHAR(255) DEFAULT NULL,
    oral_cancer_biopsy_treatment VARCHAR(255) DEFAULT NULL,

    prostate_cancer VARCHAR(255) DEFAULT NULL,
    digital_rectal_prostate_examination VARCHAR(255) DEFAULT NULL,
    digital_rectal_prostate_results VARCHAR(255) DEFAULT NULL,
    digital_rectal_prostate_treatment VARCHAR(255) DEFAULT NULL,
    prostatic_specific_antigen_test VARCHAR(255) DEFAULT NULL,
    prostatic_specific_antigen_results VARCHAR(255) DEFAULT NULL,
    prostatic_specific_antigen_treatment VARCHAR(255) DEFAULT NULL,
    breast_cancer VARCHAR(50) DEFAULT NULL,
    clinical_breast_examination_screening_method VARCHAR(255) DEFAULT NULL,
    ultrasound_screening_method VARCHAR(255) DEFAULT NULL,
    mammography_smear_screening_method VARCHAR(255) DEFAULT NULL,
    clinical_breast_examination_screening_result VARCHAR(255) DEFAULT NULL,
    ultrasound_screening_result VARCHAR(255) DEFAULT NULL,
    mammography_screening_result VARCHAR(255) DEFAULT NULL,
    clinical_breast_examination_treatment_method VARCHAR(255) DEFAULT NULL,
    ultrasound_treatment_method VARCHAR(255) DEFAULT NULL,
    breast_tissue_diagnosis VARCHAR(255) DEFAULT NULL,
    breast_tissue_diagnosis_date DATE,
    reason_tissue_diagnosis_not_done VARCHAR(255) DEFAULT NULL,
    mammography_treatment_method VARCHAR(255) DEFAULT NULL,
    referred_out VARCHAR(100) DEFAULT NULL,
    referral_facility VARCHAR(100) DEFAULT NULL,
    referral_reason VARCHAR(255) DEFAULT NULL,
    followup_date DATETIME,
    hiv_status VARCHAR(100) DEFAULT NULL,
    smoke_cigarattes VARCHAR(255) DEFAULT NULL,
    other_forms_tobacco VARCHAR(255) DEFAULT NULL,
    take_alcohol VARCHAR(255) DEFAULT NULL,
    previous_treatment VARCHAR(255) DEFAULT NULL,
    previous_treatment_specify VARCHAR(255) DEFAULT NULL,
    signs_symptoms VARCHAR(500) DEFAULT NULL,
    signs_symptoms_specify VARCHAR(500) DEFAULT NULL,
    family_history VARCHAR(100) DEFAULT NULL,
    number_of_years_smoked VARCHAR(100) DEFAULT NULL,
    number_of_cigarette_per_day VARCHAR(100) DEFAULT NULL,
    clinical_notes VARCHAR(500) DEFAULT NULL,
    voided INT(11),
    CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
    CONSTRAINT unique_uuid UNIQUE(uuid),
    INDEX(visit_date),
    INDEX(patient_id),
    INDEX(patient_id, visit_date)
  );
  SELECT "Successfully created etl_cervical_cancer_screening table";

  -- --------------------- creating patient contact  table -------------------------------
  CREATE TABLE kenyaemr_etl.etl_patient_contact (
    id                     INT(11),
    uuid                   CHAR(38),
    date_created           DATE,
    first_name             VARCHAR(255),
    middle_name            VARCHAR(255),
    last_name              VARCHAR(255),
    sex                    VARCHAR(50),
    birth_date             DATETIME,
    physical_address       VARCHAR(255),
    phone_contact          VARCHAR(255),
    patient_related_to     INT(11),
    patient_id             INT(11),
    relationship_type      INT(11),
    appointment_date       DATETIME,
    baseline_hiv_status    VARCHAR(255),
    reported_test_date      DATETIME,
    ipv_outcome            VARCHAR(255),
    marital_status         VARCHAR(100),
    living_with_patient    VARCHAR(100),
    pns_approach           VARCHAR(100),
    contact_listing_decline_reason   VARCHAR(255),
    consented_contact_listing   VARCHAR(100),
    date_last_modified DATETIME,
    voided INT(11),
    CONSTRAINT FOREIGN KEY (patient_related_to) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
    CONSTRAINT unique_uuid UNIQUE(uuid),
    INDEX(date_created),
    INDEX(id),
    INDEX(id, date_created)
  );

  SELECT "Successfully created etl_patient_contact table";

  -- --------------------- creating client trace  table -------------------------------
  CREATE TABLE kenyaemr_etl.etl_client_trace (
    id                     INT(11),
    uuid                   CHAR(38),
    date_created DATETIME NOT NULL,
    date_last_modified DATETIME,
    encounter_date         DATETIME,
    client_id              INT(11),
    contact_type           VARCHAR(255),
    status                 VARCHAR(255),
    unique_patient_no      VARCHAR(255),
    facility_linked_to     VARCHAR(255),
    health_worker_handed_to    VARCHAR(255),
    remarks                VARCHAR(255),
    appointment_date       DATETIME,
    voided INT(11),
    CONSTRAINT FOREIGN KEY (client_id) REFERENCES kenyaemr_etl.etl_patient_contact(id),
    CONSTRAINT unique_uuid UNIQUE(uuid),
    INDEX(date_created),
    INDEX(id),
    INDEX(id, date_created)
  );

  SELECT "Successfully created etl_client_trace table";


 -- --------------------- creating Viral Load table -------------------------------
  CREATE TABLE kenyaemr_etl.etl_viral_load (
    uuid CHAR(38),
    encounter_id INT(11) NOT NULL PRIMARY KEY,
    patient_id INT(11) NOT NULL ,
    location_id INT(11) DEFAULT NULL,
    visit_date DATE,
    order_date DATE ,
    date_of_result DATE ,
    order_reason VARCHAR(255) DEFAULT NULL ,
    previous_vl_result VARCHAR(50) DEFAULT NULL,
    current_vl_result VARCHAR(50) DEFAULT NULL,
    previous_vl_date DATE,
    previous_vl_reason VARCHAR(255) DEFAULT NULL,
    vl_months_since_hiv_enrollment INT(11) DEFAULT NULL,
    vl_months_since_otz_enrollment INT(11) DEFAULT NULL,
    eligibility VARCHAR(50) DEFAULT NULL,
    date_created DATETIME NOT NULL,
    date_last_modified DATETIME,
    voided INT(11),
    CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
    CONSTRAINT unique_uuid UNIQUE(uuid),
    INDEX(visit_date),
    INDEX(encounter_id),
    INDEX(patient_id),
    INDEX(patient_id, visit_date)
  );

  SELECT "Successfully created etl_viral_load table";

       -- create table etl_contact
    create table kenyaemr_etl.etl_contact (
      uuid char(38) ,
      unique_identifier VARCHAR(50),
      client_id INT(11) NOT NULL,
      visit_id INT(11) DEFAULT NULL,
      visit_date DATE,
      location_id INT(11) DEFAULT NULL,
      encounter_id INT(11) NOT NULL PRIMARY KEY,
      encounter_provider INT(11),
      date_created DATETIME NOT NULL,
      date_last_modified DATETIME,
      patient_type VARCHAR(50),
      transfer_in_date DATE,
      date_first_enrolled_in_kp DATE,
      facility_transferred_from VARCHAR(255),
      key_population_type VARCHAR(255),
      priority_population_type VARCHAR(255),
      implementation_county VARCHAR(200),
      implementation_subcounty VARCHAR(200),
      implementation_ward VARCHAR(200),
      contacted_by_peducator VARCHAR(10),
      program_name VARCHAR(255),
      frequent_hotspot_name VARCHAR(255),
      frequent_hotspot_type VARCHAR(255),
      year_started_sex_work VARCHAR(10),
      year_started_sex_with_men VARCHAR(10),
      year_started_drugs VARCHAR(10),
      avg_weekly_sex_acts int(11),
      avg_weekly_anal_sex_acts int(11),
      avg_daily_drug_injections int(11),
      contact_person_name VARCHAR(255),
      contact_person_alias VARCHAR(255),
      contact_person_phone VARCHAR(255),

      voided INT(11),
      constraint foreign key(client_id) references kenyaemr_etl.etl_patient_demographics(patient_id),
      CONSTRAINT unique_uuid UNIQUE(uuid),
      index(client_id),
      index(unique_identifier),
      index(key_population_type),
      index(priority_population_type),
      index(patient_type),
      index(transfer_in_date),
      index(date_first_enrolled_in_kp),
      index(implementation_subcounty)
    );

    SELECT "Successfully created etl_contact table";

    -- create table etl_client_enrollment

    create table kenyaemr_etl.etl_client_enrollment (
      uuid char(38) ,
      client_id INT(11) NOT NULL,
      visit_id INT(11) DEFAULT NULL,
      visit_date DATE,
      location_id INT(11) DEFAULT NULL,
      encounter_id INT(11) NOT NULL PRIMARY KEY,
      encounter_provider INT(11),
      date_created DATETIME NOT NULL,
      date_last_modified DATETIME,
      contacted_for_prevention VARCHAR(10),
      has_regular_free_sex_partner VARCHAR(10),
      year_started_sex_work VARCHAR(10),
      year_started_sex_with_men VARCHAR(10),
      year_started_drugs VARCHAR(10),
      has_expereienced_sexual_violence VARCHAR(10),
      has_expereienced_physical_violence VARCHAR(10),
      ever_tested_for_hiv VARCHAR(10),
      test_type VARCHAR(255),
      share_test_results VARCHAR(100),
      willing_to_test VARCHAR(10),
      test_decline_reason VARCHAR(255),
      receiving_hiv_care VARCHAR(10),
      care_facility_name VARCHAR(100),
      ccc_number VARCHAR(100),
      vl_test_done VARCHAR(10),
      vl_results_date DATE,
      contact_for_appointment VARCHAR(10),
      contact_method VARCHAR(255),
      buddy_name VARCHAR(255),
      buddy_phone_number VARCHAR(255),
      voided INT(11),
      constraint foreign key(client_id) references kenyaemr_etl.etl_patient_demographics(patient_id),
      CONSTRAINT unique_uuid UNIQUE(uuid),
      index(client_id)
    );
    SELECT "Successfully created etl_client_enrollment table";

    -- create table etl_kp_clinical_visit

    create table kenyaemr_etl.etl_clinical_visit (
      uuid char(38) ,
      client_id INT(11) NOT NULL,
      visit_id INT(11) DEFAULT NULL,
      visit_date DATE,
      location_id INT(11) DEFAULT NULL,
      encounter_id INT(11) NOT NULL PRIMARY KEY,
      encounter_provider INT(11),
      date_created DATETIME NOT NULL,
      date_last_modified DATETIME,
      implementing_partner VARCHAR(255),
      type_of_visit VARCHAR(255),
      visit_reason VARCHAR(255),
      service_delivery_model VARCHAR(255),
      sti_screened VARCHAR(10),
      sti_results VARCHAR(255),
      sti_treated VARCHAR(10),
      sti_referred VARCHAR(10),
      sti_referred_text VARCHAR(255),
      tb_screened VARCHAR(10),
      tb_results VARCHAR(255),
      tb_treated VARCHAR(10),
      tb_referred VARCHAR(10),
      tb_referred_text VARCHAR(255),
      hepatitisB_screened VARCHAR(10),
      hepatitisB_results VARCHAR(255),
      hepatitisB_treated VARCHAR(10),
      hepatitisB_referred VARCHAR(10),
      hepatitisB_text VARCHAR(255),
      hepatitisC_screened VARCHAR(10),
      hepatitisC_results VARCHAR(255),
      hepatitisC_treated VARCHAR(10),
      hepatitisC_referred VARCHAR(10),
      hepatitisC_text VARCHAR(255),
      overdose_screened VARCHAR(10),
      overdose_results VARCHAR(255),
      overdose_treated VARCHAR(10),
      received_naloxone VARCHAR(10),
      overdose_referred VARCHAR(10),
      overdose_text VARCHAR(255),
      abscess_screened VARCHAR(10),
      abscess_results VARCHAR(255),
      abscess_treated VARCHAR(10),
      abscess_referred VARCHAR(10),
      abscess_text VARCHAR(255),
      alcohol_screened VARCHAR(10),
      alcohol_results VARCHAR(255),
      alcohol_treated VARCHAR(10),
      alcohol_referred VARCHAR(10),
      alcohol_text VARCHAR(255),
      cerv_cancer_screened VARCHAR(10),
      cerv_cancer_results VARCHAR(255),
      cerv_cancer_treated VARCHAR(10),
      cerv_cancer_referred VARCHAR(10),
      cerv_cancer_text VARCHAR(255),
      prep_screened VARCHAR(10),
      prep_results VARCHAR(255),
      prep_treated VARCHAR(10),
      prep_referred VARCHAR(10),
      prep_text VARCHAR(255),
      violence_screened VARCHAR(10),
      violence_results VARCHAR(255),
      violence_treated VARCHAR(10),
      violence_referred VARCHAR(10),
      violence_text VARCHAR(255),
      risk_red_counselling_screened VARCHAR(10),
      risk_red_counselling_eligibility VARCHAR(255),
      risk_red_counselling_support VARCHAR(10),
      risk_red_counselling_ebi_provided VARCHAR(10),
      risk_red_counselling_text VARCHAR(255),
      fp_screened VARCHAR(10),
      fp_eligibility VARCHAR(255),
      fp_treated VARCHAR(10),
      fp_referred VARCHAR(10),
      fp_text VARCHAR(255),
      mental_health_screened VARCHAR(10),
      mental_health_results VARCHAR(255),
      mental_health_support VARCHAR(100),
      mental_health_referred VARCHAR(10),
      mental_health_text VARCHAR(255),
      mat_screened VARCHAR(10),
      mat_results VARCHAR(255),
      mat_treated VARCHAR(100),
      mat_referred VARCHAR(10),
      mat_text VARCHAR(255),
      hiv_self_rep_status VARCHAR(50),
      last_hiv_test_setting VARCHAR(100),
      counselled_for_hiv VARCHAR(10),
      hiv_tested VARCHAR(10),
      test_frequency VARCHAR(100),
      received_results VARCHAR(10),
      test_results VARCHAR(100),
      linked_to_art VARCHAR(10),
      facility_linked_to VARCHAR(10),
      self_test_education VARCHAR(10),
      self_test_kits_given VARCHAR(100),
      self_use_kits VARCHAR (10),
      distribution_kits VARCHAR (10),
      self_tested VARCHAR(10),
      self_test_date DATE,
      self_test_frequency VARCHAR(100),
      self_test_results VARCHAR(100),
      test_confirmatory_results VARCHAR(100),
      confirmatory_facility VARCHAR(100),
      offsite_confirmatory_facility VARCHAR(100),
      self_test_linked_art VARCHAR(10),
      self_test_link_facility VARCHAR(255),
      hiv_care_facility VARCHAR(255),
      other_hiv_care_facility VARCHAR(255),
      initiated_art_this_month VARCHAR(10),
      active_art VARCHAR(10),
      eligible_vl VARCHAR(50),
      vl_test_done VARCHAR(100),
      vl_results VARCHAR(100),
      received_vl_results VARCHAR(100),
      condom_use_education VARCHAR(10),
      post_abortal_care VARCHAR(10),
      referral VARCHAR(10),
      linked_to_psychosocial VARCHAR(10),
      male_condoms_no VARCHAR(10),
      female_condoms_no VARCHAR(10),
      lubes_no VARCHAR(10),
      syringes_needles_no VARCHAR(10),
      pep_eligible VARCHAR(10),
      exposure_type VARCHAR(100),
      other_exposure_type VARCHAR(100),
      clinical_notes VARCHAR(255),
      appointment_date DATE,
      voided INT(11),
      constraint foreign key(client_id) references kenyaemr_etl.etl_patient_demographics(patient_id),
      CONSTRAINT unique_uuid UNIQUE(uuid),
      index(client_id),
      index(client_id,visit_date)
    );
    SELECT "Successfully created etl_clinical_visit table";

    -- ------------ create table etl_kp_peer_calendar-----------------------
    CREATE TABLE kenyaemr_etl.etl_peer_calendar (
      uuid CHAR(38),
      encounter_id INT(11) NOT NULL PRIMARY KEY,
      client_id INT(11) NOT NULL ,
      location_id INT(11) DEFAULT NULL,
      visit_date DATE,
      visit_id INT(11),
      encounter_provider INT(11),
      date_created DATETIME NOT NULL,
      date_last_modified DATETIME,
      hotspot_name VARCHAR(255),
      typology VARCHAR(255),
      other_hotspots VARCHAR(255),
      weekly_sex_acts INT(10),
      monthly_condoms_required INT(10),
      weekly_anal_sex_acts INT(10),
      monthly_lubes_required INT(10),
      daily_injections INT(10),
      monthly_syringes_required INT(10),
      years_in_sexwork_drugs INT(10),
      experienced_violence VARCHAR(10),
      service_provided_within_last_month VARCHAR(255),
      monthly_n_and_s_distributed  INT(10),
      monthly_male_condoms_distributed  INT(10),
      monthly_lubes_distributed  INT(10),
      monthly_female_condoms_distributed  INT(10),
      monthly_self_test_kits_distributed INT(10),
      received_clinical_service VARCHAR(10),
      violence_reported VARCHAR(10),
      referred  VARCHAR(10),
      health_edu  VARCHAR(10),
      remarks VARCHAR(255),
      voided INT(11),
      CONSTRAINT FOREIGN KEY (client_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
      CONSTRAINT unique_uuid UNIQUE(uuid),
      INDEX(visit_date),
      INDEX(client_id, visit_date)
    );

    SELECT "Successfully created etl_peer_calendar table";

        -- ------------ create table etl_kp_sti_treatment-----------------------
    CREATE TABLE kenyaemr_etl.etl_sti_treatment (
      uuid CHAR(38),
      encounter_id INT(11) NOT NULL PRIMARY KEY,
      client_id INT(11) NOT NULL ,
      location_id INT(11) DEFAULT NULL,
      visit_date DATE,
      visit_id INT(11),
      encounter_provider INT(11),
      date_created DATETIME NOT NULL,
      date_last_modified DATETIME,
      visit_reason VARCHAR(255),
      syndrome VARCHAR(10),
      other_syndrome VARCHAR(255),
      drug_prescription VARCHAR(10),
      other_drug_prescription VARCHAR(255),
      genital_exam_done VARCHAR(10),
      lab_referral VARCHAR(10),
      lab_form_number VARCHAR(100),
      referred_to_facility VARCHAR(10),
      facility_name VARCHAR(255),
      partner_referral_done VARCHAR(10),
      given_lubes VARCHAR(10),
      no_of_lubes INT(10),
      given_condoms VARCHAR(10),
      no_of_condoms INT(10),
      provider_comments VARCHAR(255),
      provider_name VARCHAR(255),
      appointment_date DATE,
      voided INT(11),
      CONSTRAINT FOREIGN KEY (client_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
      CONSTRAINT unique_uuid UNIQUE(uuid),
      INDEX(visit_date),
      INDEX(encounter_id),
      INDEX(client_id),
      INDEX(visit_reason),
      INDEX(given_lubes),
      INDEX(given_condoms)
    );

  CREATE TABLE kenyaemr_etl.etl_peer_tracking (
      uuid char(38),
      provider INT(11),
      client_id INT(11) NOT NULL ,
      visit_id INT(11),
      visit_date DATE,
      location_id INT(11) DEFAULT NULL,
      encounter_id INT(11) NOT NULL PRIMARY KEY,
      tracing_attempted VARCHAR(10),
      tracing_not_attempted_reason VARCHAR(100),
      attempt_number VARCHAR(11),
      tracing_date DATE,
      tracing_type VARCHAR(100),
      tracing_outcome VARCHAR(100),
      is_final_trace VARCHAR(10),
      tracing_outcome_status VARCHAR(100),
      voluntary_exit_comment VARCHAR(255),
      status_in_program VARCHAR(100),
      source_of_information VARCHAR(100),
      other_informant VARCHAR(100),
      date_created DATETIME NOT NULL,
      date_last_modified DATETIME,
      voided INT(11),
      CONSTRAINT FOREIGN KEY (client_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
      CONSTRAINT unique_uuid UNIQUE(uuid),
      INDEX(visit_date),
      INDEX(encounter_id),
      INDEX(client_id),
      INDEX(status_in_program),
      INDEX(tracing_type)
    );

    CREATE TABLE kenyaemr_etl.etl_treatment_verification (
      uuid char(38),
      provider INT(11),
      client_id INT(11) NOT NULL ,
      visit_id INT(11),
      visit_date DATE,
      location_id INT(11) DEFAULT NULL,
      encounter_id INT(11) NOT NULL PRIMARY KEY,
      date_diagnosed_with_hiv DATE,
      art_health_facility VARCHAR(100),
      ccc_number VARCHAR(100),
      is_pepfar_site VARCHAR(11),
      date_initiated_art DATE,
      current_regimen VARCHAR(100),
      information_source VARCHAR(100),
      cd4_test_date DATE,
      cd4 VARCHAR(100),
      vl_test_date DATE,
      viral_load VARCHAR(100),
      disclosed_status VARCHAR(11),
      person_disclosed_to VARCHAR(100),
      other_person_disclosed_to VARCHAR(100),
      IPT_start_date DATE,
      IPT_completion_date DATE,
      on_diff_care VARCHAR(11),
      in_support_group VARCHAR(11),
      support_group_name VARCHAR(100),
      opportunistic_infection VARCHAR(100),
      oi_diagnosis_date DATE,
      oi_treatment_start_date DATE,
      oi_treatment_end_date DATE,
      comment VARCHAR(100),
      date_created DATETIME NOT NULL,
      date_last_modified DATETIME,
      voided INT(11),
      CONSTRAINT FOREIGN KEY (client_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
      CONSTRAINT unique_uuid UNIQUE(uuid),
      INDEX(visit_date),
      INDEX(encounter_id),
      INDEX(client_id)
    );

/* Form collecting data has been retired
CREATE TABLE kenyaemr_etl.etl_gender_based_violence (
  uuid char(38),
  provider INT(11),
  client_id INT(11) NOT NULL ,
  visit_id INT(11),
  visit_date DATE,
  location_id INT(11) DEFAULT NULL,
  encounter_id INT(11) NOT NULL PRIMARY KEY,
  is_physically_abused VARCHAR(10),
  physical_abuse_perpetrator VARCHAR(100),
  other_physical_abuse_perpetrator VARCHAR(100),
  in_physically_abusive_relationship VARCHAR(10),
  in_physically_abusive_relationship_with VARCHAR(100),
  other_physically_abusive_relationship_perpetrator VARCHAR(100),
  in_emotionally_abusive_relationship VARCHAR(10),
  emotional_abuse_perpetrator VARCHAR(100),
  other_emotional_abuse_perpetrator VARCHAR(100),
  in_sexually_abusive_relationship VARCHAR(10),
  sexual_abuse_perpetrator VARCHAR(100),
  other_sexual_abuse_perpetrator VARCHAR(100),
  ever_abused_by_unrelated_person VARCHAR(10),
  unrelated_perpetrator VARCHAR(100),
  other_unrelated_perpetrator VARCHAR(100),
  sought_help VARCHAR(10),
  help_provider VARCHAR(100),
  date_helped DATE,
  help_outcome VARCHAR(100),
  other_outcome VARCHAR(100),
  reason_for_not_reporting VARCHAR(100),
  other_reason_for_not_reporting VARCHAR(100),
  date_created DATETIME NOT NULL,
  date_last_modified DATETIME,
  voided INT(11),
  CONSTRAINT FOREIGN KEY (client_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
  CONSTRAINT unique_uuid UNIQUE(uuid),
  INDEX(visit_date),
  INDEX(encounter_id),
  INDEX(client_id)
);*/

CREATE TABLE kenyaemr_etl.etl_PrEP_verification (
    uuid char(38),
    provider INT(11),
    client_id INT(11) NOT NULL ,
    visit_id INT(11),
    visit_date DATE,
    location_id INT(11) DEFAULT NULL,
    encounter_id INT(11) NOT NULL PRIMARY KEY,
    date_enrolled DATE,
    health_facility_accessing_PrEP VARCHAR(100),
    is_pepfar_site VARCHAR(11),
    date_initiated_PrEP DATE,
	  PrEP_regimen VARCHAR(100),
	  information_source VARCHAR(100),
	  PrEP_status VARCHAR(100),
	  verification_date DATE,
	  discontinuation_reason VARCHAR(100),
	  other_discontinuation_reason VARCHAR(100),
	  appointment_date DATE,
	  date_created DATETIME NOT NULL,
    date_last_modified DATETIME,
    voided INT(11),
    CONSTRAINT FOREIGN KEY (client_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
    CONSTRAINT unique_uuid UNIQUE(uuid),
    INDEX(visit_date),
    INDEX(encounter_id),
    INDEX(client_id)
    );

    -- ------------ create table etl_alcohol_drug_abuse_screening-----------------------

    CREATE TABLE kenyaemr_etl.etl_alcohol_drug_abuse_screening (
    uuid char(38),
    provider INT(11),
    patient_id INT(11) NOT NULL ,
    visit_id INT(11),
    visit_date DATE,
    location_id INT(11) DEFAULT NULL,
    encounter_id INT(11) NOT NULL PRIMARY KEY,
    alcohol_drinking_frequency VARCHAR(50),
    smoking_frequency VARCHAR(50),
    drugs_use_frequency VARCHAR(50),
    date_created DATETIME NOT NULL,
    date_last_modified DATETIME,
    voided INT(11),
    CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
    CONSTRAINT unique_uuid UNIQUE(uuid),
    INDEX(visit_date),
    INDEX(encounter_id),
    INDEX(patient_id)
    );

    -- ------------ create table etl_gbv_screening-----------------------

    CREATE TABLE kenyaemr_etl.etl_gbv_screening (
    uuid char(38),
    provider INT(11),
    patient_id INT(11) NOT NULL ,
    visit_id INT(11),
    visit_date DATE,
    location_id INT(11) DEFAULT NULL,
    encounter_id INT(11) NOT NULL PRIMARY KEY,
    ipv VARCHAR(50),
    physical_ipv VARCHAR(50),
    emotional_ipv VARCHAR(50),
    sexual_ipv VARCHAR(50),
    ipv_relationship VARCHAR(50),
    date_created DATETIME NOT NULL,
    date_last_modified DATETIME,
    voided INT(11),
    CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
    CONSTRAINT unique_uuid UNIQUE(uuid),
    INDEX(visit_date),
    INDEX(encounter_id),
    INDEX(patient_id)
    );

      -- ------------ create table etl_gbv_screening_action-----------------------

    CREATE TABLE kenyaemr_etl.etl_gbv_screening_action (
    uuid char(38),
    provider INT(11),
    patient_id INT(11) NOT NULL,
    encounter_id INT(11) NOT NULL,
    visit_id INT(11),
    visit_date DATE,
    location_id INT(11) DEFAULT NULL,
    obs_id INT(11) NOT NULL PRIMARY KEY,
    help_provider VARCHAR(100),
    action_taken VARCHAR(100),
    action_date DATE,
    reason_for_not_reporting VARCHAR(100),
    date_created DATETIME NOT NULL,
    date_last_modified DATETIME,
    voided INT(11),
    CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
    INDEX(visit_date),
    INDEX(obs_id),
    INDEX(patient_id)
    );

    -- ------------ create table etl_depression_screening-----------------------

    CREATE TABLE kenyaemr_etl.etl_depression_screening (
    uuid char(38),
    provider INT(11),
    patient_id INT(11) NOT NULL ,
    visit_id INT(11),
    visit_date DATE,
    location_id INT(11) DEFAULT NULL,
    encounter_id INT(11) NOT NULL PRIMARY KEY,
    PHQ_9_rating VARCHAR(255),
    date_created DATETIME NOT NULL,
    date_last_modified DATETIME,
    voided INT(11),
    CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
    CONSTRAINT unique_uuid UNIQUE(uuid),
    INDEX(visit_date),
    INDEX(encounter_id),
    INDEX(patient_id)
    );

    -- ------------ create table etl_adverse_events-----------------------

CREATE TABLE kenyaemr_etl.etl_adverse_events (
uuid char(38),
form VARCHAR(50),
provider INT(11),
patient_id INT(11) NOT NULL ,
visit_id INT(11),
visit_date DATE,
location_id INT(11) DEFAULT NULL,
encounter_id INT(11) NOT NULL,
obs_id INT(11) NOT NULL PRIMARY KEY,
cause INT(11),
adverse_event INT(11),
severity INT(11),
start_date DATE,
action_taken INT(11),
voided int(11),
date_created DATETIME NOT NULL,
date_last_modified DATETIME,
CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
INDEX(visit_date),
INDEX(patient_id),
INDEX(encounter_id),
INDEX(form),
INDEX(obs_id)
);

-- ------------ create table etl_allergies_chronic_illnesses-----------------------

CREATE TABLE kenyaemr_etl.etl_allergy_chronic_illness (
uuid char(38),
provider INT(11),
patient_id INT(11) NOT NULL,
visit_id INT(11),
visit_date DATE,
location_id INT(11) DEFAULT NULL,
encounter_id INT(11) NOT NULL,
obs_id INT(11) NOT NULL PRIMARY KEY,
chronic_illness INT(11),
chronic_illness_onset_date DATE,
is_chronic_illness_controlled INT(11),
allergy_causative_agent INT(11),
allergy_reaction INT(11),
allergy_severity INT(11),
allergy_onset_date DATE,
complaint INT(11),
complaint_date DATE,
voided int(11),
date_created DATETIME NOT NULL,
date_last_modified DATETIME,
CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
INDEX(visit_date),
INDEX(patient_id),
INDEX(encounter_id),
INDEX(obs_id)
);

-- ----------- create table etl_pre_hiv_enrollment_art-----------------------

CREATE TABLE kenyaemr_etl.etl_pre_hiv_enrollment_art (
uuid char(38),
provider INT(11),
patient_id INT(11) NOT NULL,
visit_id INT(11),
visit_date DATE,
location_id INT(11) DEFAULT NULL,
encounter_id INT(11) NOT NULL,
obs_id INT(11) NOT NULL PRIMARY KEY,
PMTCT INT(11),
PMTCT_regimen INT(11),
PEP INT(11),
PEP_regimen INT(11),
PrEP INT(11),
PrEP_regimen INT(11),
HAART INT(11),
HAART_regimen INT(11),
voided int(11),
date_created DATETIME NOT NULL,
date_last_modified DATETIME,
CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
INDEX(visit_date),
INDEX(patient_id),
INDEX(encounter_id),
INDEX(obs_id)
);

-- ----------- create table kenyaemr_etl.etl_covid19_assessment-----------------------

CREATE TABLE kenyaemr_etl.etl_covid19_assessment (
  uuid                                    char(38),
  provider                                INT(11),
  patient_id                              INT(11)  NOT NULL,
  visit_id                                INT(11),
  visit_date                              DATE,
  location_id                             INT(11) DEFAULT NULL,
  encounter_id                            INT(11)  NOT NULL,
  obs_id                                  VARCHAR(10),
  ever_vaccinated                         VARCHAR(10),
  first_vaccine_type                      VARCHAR(10),
  second_vaccine_type                     VARCHAR(10),
  first_dose                              VARCHAR(10),
  second_dose                             VARCHAR(10),
  first_dose_date                         VARCHAR(10),
  second_dose_date                        VARCHAR(10),
  first_vaccination_verified              VARCHAR(10),
  second_vaccination_verified             VARCHAR(10),
  final_vaccination_status                VARCHAR(10),
  ever_received_booster                   VARCHAR(10),
  booster_vaccine_taken                   VARCHAR(10),
  date_taken_booster_vaccine              VARCHAR(10),
  booster_sequence                        VARCHAR(10),
  booster_dose_verified                   VARCHAR(10),
  ever_tested_covid_19_positive           VARCHAR(10),
  symptomatic                             VARCHAR(10),
  date_tested_positive                    VARCHAR(10),
  hospital_admission                      VARCHAR(10),
  admission_unit                          varchar(50),
  on_ventillator                          VARCHAR(10),
  on_oxygen_supplement                    VARCHAR(10),
  date_created                            DATETIME NOT NULL,
  date_last_modified                      DATETIME,
  voided                                  int(11),
  CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics (patient_id),
  CONSTRAINT unique_uuid UNIQUE(uuid),
  INDEX (visit_date),
  INDEX (patient_id),
  INDEX (encounter_id)
);

 -- -- Create table kenyaemr_etl.etl_vmmc_enrolment -----

CREATE TABLE kenyaemr_etl.etl_vmmc_enrolment
(
    uuid                      char(38),
    provider                  INT(11),
    patient_id                INT(11)  NOT NULL,
    visit_id                  INT(11),
    visit_date                DATE,
    location_id               INT(11) DEFAULT NULL,
    encounter_id              INT(11)  NOT NULL,
    referee                   INT(11),
    other_referee             varchar(100),
    source_of_vmmc_info       INT(11),
    other_source_of_vmmc_info varchar(100),
    county_of_origin          varchar(100),
    date_created              DATETIME NOT NULL,
    date_last_modified        DATETIME,
    voided                    INT(11),
    CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics (patient_id),
    CONSTRAINT unique_uuid UNIQUE (uuid),
    INDEX (visit_date),
    INDEX (patient_id),
    INDEX (encounter_id),
    INDEX (source_of_vmmc_info),
    INDEX (county_of_origin)
);

 -- -- Create table kenyaemr_etl.etl_vmmc_circumcision_procedure -----

CREATE TABLE kenyaemr_etl.etl_vmmc_circumcision_procedure
(
    uuid                           char(38),
    provider                       INT(11),
    patient_id                     INT(11)  NOT NULL,
    visit_id                       INT(11),
    visit_date                     DATE,
    location_id                    INT(11) DEFAULT NULL,
    encounter_id                   INT(11)  NOT NULL,
    circumcision_method            INT(11),
    surgical_circumcision_method   INT(11),
    reason_circumcision_ineligible varchar(100),
    circumcision_device            INT(11),
    specific_other_device          varchar(100),
    device_size                    varchar(100),
    lot_number                     varchar(100),
    anaesthesia_used               INT(11),
    anaesthesia_concentration      varchar(100),
    anaesthesia_volume             INT(11),
    time_of_first_placement_cut    DATETIME,
    time_of_last_device_closure    DATETIME,
    has_adverse_event              INT(11),
    adverse_event                  varchar(255),
    severity                       varchar(100),
    adverse_event_management       varchar(255),
    clinician_name                 varchar(100),
    clinician_cadre                INT(11),
    assist_clinician_name          varchar(100),
    assist_clinician_cadre         INT(11),
    theatre_number                 varchar(100),
    date_created                   DATETIME NOT NULL,
    date_last_modified             DATETIME,
    voided                         INT(11),
    CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics (patient_id),
    CONSTRAINT unique_uuid UNIQUE (uuid),
    INDEX (visit_date),
    INDEX (patient_id),
    INDEX (encounter_id),
    INDEX (circumcision_method),
    INDEX (has_adverse_event)
);

 -- --- Create table kenyaemr_etl.etl_vmmc_medical_history -----

CREATE TABLE kenyaemr_etl.etl_vmmc_medical_history
(
    uuid                          char(38),
    provider                      INT(11),
    patient_id                    INT(11)  NOT NULL,
    visit_id                      INT(11),
    visit_date                    DATE,
    location_id                   INT(11) DEFAULT NULL,
    encounter_id                  INT(11)  NOT NULL,
    assent_given                  INT(11),
    consent_given                 INT(11),
    hiv_status                    INT(11),
    hiv_unknown_reason            varchar(255),
    hiv_test_date                 DATE,
    art_start_date                DATE,
    current_regimen               varchar(100),
    ccc_number                    varchar(100),
    next_appointment_date         DATE,
    hiv_care_facility             INT(11),
    hiv_care_facility_name        varchar(100),
    vl                            varchar(50),
    cd4_count                     varchar(50),
    bleeding_disorder             varchar(255),
    diabetes                      varchar(255),
    client_presenting_complaints  varchar(255),
    other_complaints              varchar(255),
    ongoing_treatment             varchar(255),
    other_ongoing_treatment       varchar(255),
    hb_level                      INT(11),
    sugar_level                   INT(11),
    has_known_allergies           INT(11),
    ever_had_surgical_operation   INT(11),
    specific_surgical_operation   varchar(255),
    proven_tetanus_booster        INT(11),
    ever_received_tetanus_booster INT(11),
    date_received_tetanus_booster DATE,
    blood_pressure                varchar(50),
    pulse_rate                    INT(11),
    temperature                   varchar(50),
    in_good_health                INT(11),
    counselled                    INT(11),
    reason_ineligible             varchar(100),
    circumcision_method_chosen    varchar(100),
    conventional_method_chosen    INT(11),
    device_name                   INT(11),
    device_size                   INT(11),
    other_conventional_method_device_chosen    varchar(100),
    services_referral             varchar(100),
    date_created                  DATETIME NOT NULL,
    date_last_modified            DATETIME,
    voided                        INT(11),
    CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics (patient_id),
    CONSTRAINT unique_uuid UNIQUE (uuid),
    INDEX (visit_date),
    INDEX (patient_id),
    INDEX (encounter_id),
    INDEX (consent_given)
);

-- --- Create table kenyaemr_etl.etl_vmmc_client_followup -----

CREATE TABLE kenyaemr_etl.etl_vmmc_client_followup
(
  uuid                          char(38),
  provider                      INT(11),
  patient_id                    INT(11)  NOT NULL,
  visit_id                      INT(11),
  visit_date                    DATE,
  location_id                   INT(11) DEFAULT NULL,
  encounter_id                  INT(11)  NOT NULL,
  visit_type                    INT(11),
  has_adverse_event             INT(11),
  adverse_event                 varchar(255),
  severity                      varchar(100),
  adverse_event_management      varchar(255),
  medications_given             varchar(255),
  other_medications_given       varchar(255),
  clinician_name                varchar(255),
  clinician_cadre               INT(11),
  clinician_notes               varchar(255),
  date_created                  DATETIME NOT NULL,
  date_last_modified            DATETIME,
  voided                        INT(11),
  CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics (patient_id),
  CONSTRAINT unique_uuid UNIQUE (uuid),
  INDEX (visit_date),
  INDEX (patient_id),
  INDEX (encounter_id),
  INDEX (visit_type),
  INDEX (has_adverse_event)
);

-- --- Create table kenyaemr_etl.etl_vmmc_post_operation_assessment -----

CREATE TABLE kenyaemr_etl.etl_vmmc_post_operation_assessment
(
    uuid                             char(38),
    provider                         INT(11),
    patient_id                       INT(11)  NOT NULL,
    visit_id                         INT(11),
    visit_date                       DATE,
    location_id                      INT(11) DEFAULT NULL,
    encounter_id                     INT(11)  NOT NULL,
    blood_pressure                   varchar(100),
    pulse_rate                       INT(11),
    temperature                      INT(11),
    penis_elevated                   INT(11),
    given_post_procedure_instruction INT(11),
    post_procedure_instructions      varchar(250),
    given_post_operation_medication  INT(11),
    medication_given                 varchar(250),
    other_medication_given           varchar(250),
    removal_date                     DATETIME,
    next_appointment_date            DATETIME,
    discharged_by                    varchar(250),
    cadre                            INT(11),
    date_created                     DATETIME NOT NULL,
    date_last_modified               DATETIME,
    voided                           INT(11),
    CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics (patient_id),
    CONSTRAINT unique_uuid UNIQUE (uuid),
    INDEX (visit_date),
    INDEX (patient_id),
    INDEX (encounter_id)
);
-- Create etl_hts_screening table --
create table kenyaemr_etl.etl_hts_eligibility_screening (
  patient_id                       INT(11) not null,
  visit_id                         INT(11) DEFAULT NULL,
  encounter_id                     INT(11) NOT NULL primary key,
  uuid                             CHAR(38) NOT NULL,
  location_id                      INT(11) NOT NULL,
  provider                         INT(11) NOT NULL,
  visit_date                       DATE,
  population_type                  VARCHAR(100),
  key_population_type              VARCHAR(100),
  priority_population_type         VARCHAR(100),
  patient_disabled                 VARCHAR(50),
  disability_type                  VARCHAR(255),
  recommended_test                 VARCHAR(50),
  department                       INT(11),
  patient_type                     INT(11),
  is_health_worker                 INT(11),
  relationship_with_contact        VARCHAR(100),
  mother_hiv_status                INT(11),
  tested_hiv_before                INT(11),
  who_performed_test               INT(11),
  test_results                     INT(11),
  date_tested                      DATE,
  started_on_art                   INT(11),
  upn_number                       varchar(80),
  ever_had_sex                     INT(11),
  sexually_active                  VARCHAR(100),
  new_partner                      VARCHAR(100),
  partner_hiv_status               VARCHAR(100),
  couple_discordant                VARCHAR(100),
  multiple_partners                VARCHAR(100),
  number_partners                  VARCHAR(100),
  alcohol_sex                      VARCHAR(100),
  test_strategy                    VARCHAR(50),
  hts_entry_point                  VARCHAR(50),
  hts_risk_category                VARCHAR(50),
  hts_risk_score                   DOUBLE,
  money_sex                        VARCHAR(100),
  condom_burst                    VARCHAR(100),
  unknown_status_partner           VARCHAR(100),
  known_status_partner             VARCHAR(100),
  experienced_gbv                  VARCHAR(100),
  type_of_gbv                      VARCHAR(100),
  service_received                 VARCHAR(100),
  currently_on_prep                VARCHAR(100),
  recently_on_pep                 VARCHAR(100),
  recently_had_sti                 VARCHAR(100),
  tb_screened                      VARCHAR(100),
  cough                            INT(11),
  fever                            INT(11),
  weight_loss                       INT(11),
  night_sweats                     INT(11),
  contact_with_tb_case             INT(11),
  lethargy                         INT(11),
  tb_status                        INT(11),
  shared_needle                    VARCHAR(100),
  needle_stick_injuries            INT(11),
  traditional_procedures           INT(11),
  child_reasons_for_ineligibility  varchar(100),
  pregnant                         VARCHAR(100),
  breastfeeding_mother             VARCHAR(100),
  eligible_for_test                INT(11),
  referred_for_testing             INT(11),
  reason_to_test                   varchar(100),
  reason_not_to_test               varchar(100),
  reasons_for_ineligibility        varchar(100),
  specific_reason_for_ineligibility varchar(255),
  date_created                     DATETIME NOT NULL,
  date_last_modified               DATETIME,
  voided INT(11),
  CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics (patient_id),
  CONSTRAINT unique_uuid UNIQUE (uuid),
  index(patient_id),
  index(visit_id),
  index(visit_date),
  index(department),
  index(population_type),
  index(eligible_for_test)
);
-- create table etl_drug_orders

CREATE TABLE kenyaemr_etl.etl_drug_order (
  uuid CHAR(38),
  encounter_id INT(11) NOT NULL PRIMARY KEY,
  order_group_id INT(11),
  patient_id INT(11) NOT NULL ,
  location_id INT(11) DEFAULT NULL,
  visit_date DATE,
  visit_id INT(11),
  provider INT(11),
  order_id INT(11),
  urgency VARCHAR(50),
  drug_concept_id VARCHAR(50),
  drug_short_name VARCHAR(50),
  drug_name VARCHAR(255),
  frequency VARCHAR(100),
  enc_name VARCHAR(100),
  dose VARCHAR(50),
  dose_units VARCHAR(100),
  quantity VARCHAR(50),
  quantity_units VARCHAR(100),
  dosing_instructions VARCHAR(100),
  duration INT(11),
  duration_units VARCHAR(10),
  instructions VARCHAR(255),
  route VARCHAR(255),
  voided INT(11),
  date_voided DATE,
  date_created DATETIME NOT NULL,
  date_last_modified DATETIME,
  CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
  CONSTRAINT unique_uuid UNIQUE(uuid),
  INDEX(visit_date),
  INDEX(encounter_id),
  INDEX(patient_id),
  INDEX(patient_id, visit_date),
  INDEX(order_id)
);
SELECT "Successfully created etl_drug_orders table";

-- Create table etl_preventive_services --
CREATE TABLE kenyaemr_etl.etl_preventive_services (
  patient_id INT(11) NOT NULL,
  visit_date DATE,
  provider INT(11),
  location_id INT(11),
  encounter_id INT(11) NOT NULL,
  obs_group_id INT(11) NOT NULL,
  malaria_prophylaxis_1 DATE,
  malaria_prophylaxis_2 DATE,
  malaria_prophylaxis_3 DATE,
  tetanus_taxoid_1 DATE,
  tetanus_taxoid_2 DATE,
  tetanus_taxoid_3 DATE,
  tetanus_taxoid_4 DATE,
  folate_iron_1 DATE,
  folate_iron_2 DATE,
  folate_iron_3 DATE,
  folate_iron_4 DATE,
  folate_1 DATE,
  folate_2 DATE,
  folate_3 DATE,
  folate_4 DATE,
  iron_1 DATE,
  iron_2 DATE,
  iron_3 DATE,
  iron_4 DATE,
  mebendazole DATE,
  long_lasting_insecticidal_net DATE DEFAULT NULL,
  comment VARCHAR(250) DEFAULT NULL,
  date_last_modified DATETIME,
  date_created DATETIME NOT NULL,
  voided int(11),
  CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics(patient_id),
  PRIMARY KEY (patient_id,encounter_id,obs_group_id),
  INDEX(visit_date),
  INDEX(patient_id),
  INDEX(encounter_id));
SELECT "Successfully created etl_preventive_services table";

-- Create table etl_overdose_reporting --
create table kenyaemr_etl.etl_overdose_reporting (
    client_id                       INT(11) not null,
    visit_id                         INT(11) DEFAULT NULL,
    encounter_id                     INT(11) NOT NULL primary key,
    uuid                             CHAR(38) NOT NULL,
    location_id                      INT(11) NOT NULL,
    provider                         INT(11) NOT NULL,
    visit_date                       DATE,
    overdose_location                VARCHAR(100),
    overdose_date                    DATE,
    incident_type                    INT(11),
    incident_site_name               VARCHAR(255),
    incident_site_type               INT(11),
    naloxone_provided                INT(11),
    risk_factors                     INT(11),
    other_risk_factors               VARCHAR(255),
    drug                             INT(11),
    other_drug                       VARCHAR(255),
    outcome                          INT(11),
    remarks                          VARCHAR(255),
    reported_by                      VARCHAR(255),
    date_reported                    DATE,
    witness                          VARCHAR(255),
    date_witnessed                   DATE,
    encounter                        VARCHAR(255),
    date_created                     DATETIME NOT NULL,
    date_last_modified               DATETIME,
    voided                           INT(11),
    CONSTRAINT FOREIGN KEY (client_id) REFERENCES kenyaemr_etl.etl_patient_demographics (patient_id),
    CONSTRAINT unique_uuid UNIQUE (uuid),
    index(client_id),
    index(visit_id),
    index(visit_date),
    index(naloxone_provided),
    index(outcome)
);
SELECT "Successfully created etl_overdose_reporting table";

-- Create etl_art_fast_track table";
CREATE TABLE kenyaemr_etl.etl_art_fast_track
(
    uuid                              char(38),
    provider                          INT(11),
    patient_id                        INT(11)  NOT NULL,
    visit_id                          INT(11),
    visit_date                        DATE,
    location_id                       INT(11) DEFAULT NULL,
    encounter_id                      INT(11)  NOT NULL,
    art_refill_model                  INT(11),
    ctx_dispensed                     INT(11),
    dapsone_dispensed                 INT(11),
    oral_contraceptives_dispensed     INT(11),
    condoms_distributed               INT(11),
    missed_arv_doses_since_last_visit INT(11),
    doses_missed                      INT(11),
    fatigue                           INT(11),
    cough                             INT(11),
    fever                             INT(11),
    rash                              INT(11),
    nausea_vomiting                   INT(11),
    genital_sore_discharge            INT(11),
    diarrhea                          INT(11),
    other_symptoms                    INT(11),
    other_specific_symptoms           INT(11),
    pregnant                          INT(11),
    family_planning_status            INT(11),
    family_planning_method            varchar(250),
    reason_not_on_family_planning     varchar(250),
    referred_to_clinic                INT(11),
    return_visit_date                 DATE,
    date_created                      DATETIME NOT NULL,
    date_last_modified                DATETIME,
    voided                            INT(11),
    CONSTRAINT FOREIGN KEY (patient_id) REFERENCES kenyaemr_etl.etl_patient_demographics (patient_id),
    CONSTRAINT unique_uuid UNIQUE (uuid),
    INDEX (visit_date),
    INDEX (patient_id),
    INDEX (encounter_id)
);
SELECT "Successfully created etl_art_fast_track table";

UPDATE kenyaemr_etl.etl_script_status SET stop_time=NOW() where id= script_id;

END $$
